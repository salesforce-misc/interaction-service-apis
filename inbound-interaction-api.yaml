security:
- BearerAuth: []
components:
  securitySchemes:
    BearerAuth:
      name: "Authorization"
      bearerFormat: "AccessToken"
      type: "http"
      scheme: "bearer"
      in: "header"
  schemas:
    InteractionType:
      type: "string"
      enum:
      - "EntryInteraction"
      - "AttachmentInteraction"
    AgentWorkResponse:
      type: "object"
      properties:
        id:
          type: "string"
          description: "UUID that references this response"
        agentWorkId:
          type: "string"
          description: "Agent Work Id"
        agentWorkDetails:
          description: "Details of the AgentWork"
          $ref: "#/components/schemas/AgentWorkDetails"
        success:
          type: "boolean"
    AbstractEntry:
      description: "Base definition for all entry types"
      type: "object"
      properties:
        entryType:
          $ref: "#/components/schemas/EntryType"
        id:
          $ref: "#/components/schemas/EntryId"
      required:
      - "id"
      - "entryType"
      discriminator:
        propertyName: "entryType"
    Message:
      description: "A message entry"
      allOf:
      - $ref: "#/components/schemas/AbstractEntry"
      - type: "object"
        properties:
          abstractMessage:
            $ref: "#/components/schemas/AbstractMessage"
        required:
        - "abstractMessage"
    TypingStoppedIndicator:
      description: "A typing stopped indicator entry"
      allOf:
      - $ref: "#/components/schemas/AbstractEntry"
      - type: "object"
        properties:
          timestamp:
            type: "integer"
            format: "int64"
        required:
        - "timestamp"
    StaticContentMessage:
      description: "Non interactive MT or MO message with static content"
      allOf:
      - $ref: "#/components/schemas/AbstractMessage"
      - type: "object"
        properties:
          staticContent:
            $ref: "#/components/schemas/AbstractStaticContent"
        required:
        - "staticContent"
    PostInteractionResponse:
      type: "object"
      properties:
        conversationIdentifier:
          type: "string"
          description: "The conversation identifier associated with the work"
        id:
          type: "string"
        workItemIds:
          type: "array"
          items:
            type: "string"
          description: "List of WorkItem Ids"
        success:
          type: "boolean"
    PostRouteResponse:
      type: "object"
      properties:
        reasonForNotRouting:
          type: "string"
          description: "Reason for not routing this request"
          maxLength: 240
        routingCorrelationId:
          type: "string"
          description: "CorrelationId which should be associated in agent work"
          maxLength: 240
        success:
          type: "boolean"
          description: "Indicates the routing request was successful or not"
          maxLength: 240
        contextParamMap:
          type: "object"
          description: "Additional context related to routing response like userId, queueId, etc"
          additionalProperties:
            type: "string"
        psrId:
          type: "string"
          description: "Salesforce pendingServiceRouting Id"
          maxLength: 240
        workItemId:
          type: "string"
          description: "Salesforce WorkItem Id"
          maxLength: 240
        errors:
          $ref: "#/components/schemas/RoutingError"
    MessageDeliveryFailed:
      description: "A message could not be delivered"
      allOf:
      - $ref: "#/components/schemas/AbstractEntry"
      - type: "object"
        properties:
          recipient:
            $ref: "#/components/schemas/Participant"
          errorMessage:
            type: "string"
          failedConversationEntryIdentifier:
            type: "string"
          errorCode:
            type: "string"
        required:
        - "recipient"
        - "errorCode"
    DeleteRouteResponse:
      type: "object"
      properties:
        success:
          type: "boolean"
          description: "Indicates the PSR for the given conversation was successfully cancelled or not."
    FlowInfo:
      type: "object"
      description: "Enter Flow details which needs to be used for routing"
      properties:
        flowId:
          type: "string"
          description: "Enter flowId for the queue"
        queueId:
          type: "string"
          description: "Fallback queueId"
    RoutingContext:
      description: "Context about the routing details"
      type: "object"
      properties:
        conversationIdentifier:
          type: "string"
          description: "The conversation identifier associated with the work"
        routingType:
          type: "string"
          $ref: "#/components/schemas/RoutingType"
        routingCorrelationId:
          type: "string"
          description: "The UUID of the routing event"
      required:
      - "conversationIdentifier"
      - "routingType"
      - "routingCorrelationId"
    ConsentEnum:
      type: "string"
      description: "Messaging End User's messaging consent status"
      enum:
      - "OptedOut"
      - "ImplicitlyOptedIn"
      - "ExplicitlyOptedIn"
      - "DoublyOptedIn"
    AgentWorkRequest:
      description: "Payload for creating AgentWork request"
      type: "object"
      properties:
        capacityPercentage:
          type: "double"
          description: "Capacity Percentage of the WorkItem"
        capacityWeight:
          type: "double"
          description: "Capacity Weight of the WorkItem"
        workItemId:
          description: "Salesforce WorkItem Id"
          type: "string"
          maxLength: 15
          minLength: 15
        routingContext:
          $ref: "#/components/schemas/RoutingContext"
        userId:
          type: "string"
          description: "Salesforce User Id or External User Id"
      required:
      - "userId"
      - "workItemId"
    ConsentResponse:
      description: "Response after updating Consent Status of the Messaging End User from core"
      type: "object"
      properties:
        errorDetail:
          $ref: "#/components/schemas/Error"
        success:
          type: "boolean"
          description: "Status of the consent status update request"
      required:
      - "success"
    EntryId:
      type: "string"
      description: "UUID that references this entry"
      example: "f7904eb6-5352-4c5e-adf6-5f100572cf5d"
    AgentWorkDetails:
      description: "Details about Agent Work"
      type: "object"
      properties:
        existPsr:
          type: "boolean"
          description: "If there is an existed Pending Service Routing"
        capacityPercentage:
          type: "number"
          format: "double"
          description: "Percentage of the capacity"
        capacityWeight:
          type: "number"
          format: "double"
          description: "Weight of the capacity"
        psrId:
          type: "string"
          description: "Id of Pending Service Routing"
        routingContext:
          $ref: "#/components/schemas/RoutingContext"
      required:
      - "existPsr"
      - "routingContext"
    EntryInteraction:
      title: "Interaction Details"
      allOf:
      - $ref: "#/components/schemas/AbstractInteraction"
      - type: "object"
        properties:
          payload:
            $ref: "#/components/schemas/AbstractEntry"
      required:
      - "payload"
    PostRouteRequest:
      description: "Payload for getting routing instructions from salesforce"
      type: "object"
      properties:
        conversationIdentifier:
          type: "string"
          description: "The conversation identifier associated with the work"
        routingInfo:
          description: "Details to provide the core routing hook. Optional"
          $ref: "#/components/schemas/RoutingInfo"
        routingType:
          type: "string"
          description: "Details to provide the core routing hook. Optional"
          $ref: "#/components/schemas/RoutingType"
      required:
      - "conversationIdentifier"
      - "routingType"
    MessageType:
      description: "The semantic type of a message. What a message does."
      type: "string"
      enum:
      - "StaticContentMessage"
      example: "StaticContentMessage"
    ParticipantRole:
      type: "string"
      enum:
      - "EndUser"
    RoutingType:
      type: "string"
      description: "Routing type - sent in routing related events as well as in the RoutingContext"
      enum:
      - "Initial"
      - "Transfer"
    DeleteRouteRequest:
      description: "Payload for deleting routing request (psr)"
      type: "object"
      properties:
        conversationIdentifier:
          type: "string"
          description: "The conversation identifier associated with the work"
      required:
      - "conversationIdentifier"
    AbstractMessage:
      description: "Base definition for all message types"
      type: "object"
      properties:
        messageType:
          $ref: "#/components/schemas/MessageType"
        id:
          $ref: "#/components/schemas/MessageId"
      required:
      - "id"
      - "messageType"
      discriminator:
        propertyName: "messageType"
        mapping:
          StaticContentMessage: "#/components/schemas/StaticContentMessage"
    InteractionRequestJson:
      description: "JSON part of the interaction request body."
      type: "object"
      properties:
        from:
          description: "End user client identifier."
          type: "string"
          maxLength: 255
          example: ""
        to:
          description: "Destination Salesforce Channel Address Identifier"
          type: "string"
          maxLength: 240
          example: "72a6a4ec-acbc-44f6-b2b9-e444248ca843"
        routingAttributes:
          type: "object"
          description: "List of Key value pairs defining the channel variable name mapped to the value"
          additionalProperties:
            type: "string"
        interactions:
          minItems: 1
          maxItems: 1
          description: "List of interactions to add to the conversation between \"to\" and \"from\" of the request."
          type: "array"
          items:
            $ref: "#/components/schemas/AbstractInteraction"
      required:
      - "from"
      - "to"
      - "interactions"
    AttachmentInteraction:
      title: "Attachments Details"
      allOf:
      - $ref: "#/components/schemas/AbstractInteraction"
      - type: "object"
        properties:
          contentLength:
            type: "integer"
            description: "Indicates the size of the file data in bytes"
          id:
            type: "string"
            example: "57904eb6-5352-4c5e-adf6-5f100572cf54"
          text:
            type: "string"
            nullable: true
            description: "Text message to send with the file."
          attachmentIndex:
            type: "integer"
      required:
      - "id"
      - "attachmentIndex"
      - "contentLength"
    Error:
      type: "object"
      properties:
        message:
          type: "string"
        code:
          type: "int"
      required:
      - "code"
      - "message"
    Text:
      type: "string"
      description: "Text content"
    ConsentRequest:
      description: "Payload to update the consent status"
      type: "object"
      properties:
        channelAddressIdentifier:
          type: "string"
          description: "Unique channel Identifier of the messaging channel"
          maxLength: 240
        endUserClientId:
          type: "string"
          description: "The Messaging Platform Key of the Messaging End User"
          maxLength: 240
        consentStatus:
          $ref: "#/components/schemas/ConsentEnum"
      required:
      - "endUserClientId"
      - "channelAddressIdentifier"
      - "consentStatus"
    InteractionRequest:
      type: "object"
      properties:
        json:
          $ref: "#/components/schemas/InteractionRequestJson"
        attachments:
          minItems: 0
          maxItems: 1
          type: "array"
          nullable: true
          items:
            type: "string"
            format: "binary"
      required:
      - "json"
    TypingStartedIndicator:
      description: "A typing started indicator entry"
      allOf:
      - $ref: "#/components/schemas/AbstractEntry"
      - type: "object"
        properties:
          timestamp:
            type: "integer"
            format: "int64"
        required:
        - "timestamp"
    RoutingInfo:
      type: "object"
      description: "Routing related info which will be given by partner"
      properties:
        routingAttributes:
          type: "object"
          description: "List of Key value pairs defining the channel variable name mapped to the value"
          additionalProperties:
            type: "string"
        queueId:
          type: "string"
          description: "Enter queueId for the queue"
        flow:
          description: "Enter Flow details which needs to be used for routing"
          $ref: "#/components/schemas/FlowInfo"
    FormatType:
      description: "The rendering format of a message. How it looks."
      type: "string"
      enum:
      - "Text"
      example: "Attachments"
    StaticContentText:
      description: "Static text content"
      allOf:
      - $ref: "#/components/schemas/AbstractStaticContent"
      - type: "object"
        properties:
          text:
            $ref: "#/components/schemas/Text"
        required:
        - "text"
    AbstractInteraction:
      description: "A single interaction."
      type: "object"
      properties:
        interactionType:
          $ref: "#/components/schemas/InteractionType"
        timestamp:
          format: "int64"
          description: "Interaction timestamp using Millisecond format"
          type: "integer"
          example: 1688190840000
      required:
      - "timestamp"
      - "interactionType"
      discriminator:
        propertyName: "interactionType"
        mapping:
          EntryInteraction: "#/components/schemas/EntryInteraction"
          AttachmentInteraction: "#/components/schemas/AttachmentInteraction"
    RoutingError:
      type: "object"
      description: "Routing Error"
      properties:
        errorMessage:
          type: "string"
          description: "error Message"
        errorType:
          type: "string"
          description: "error Type"
          maxLength: 240
        apiErrorCode:
          type: "string"
          description: "api error code"
          maxLength: 240
    EntryType:
      type: "string"
      description: "Enum listing unique identifiers types of entries."
      enum:
      - "Message"
      - "MessageDeliveryFailed"
      - "TypingStartedIndicator"
      - "TypingStoppedIndicator"
    Participant:
      description: "A Participant"
      type: "object"
      properties:
        appType:
          type: "string"
        subject:
          type: "string"
          description: "Subject identifier for this participant"
          example: "005x00000000001"
        role:
          type: "string"
          description: "The role of this participant"
      required:
      - "appType"
      - "subject"
      - "role"
    AbstractStaticContent:
      type: "object"
      properties:
        formatType:
          $ref: "#/components/schemas/FormatType"
      required:
      - "formatType"
      discriminator:
        propertyName: "formatType"
        mapping:
          Text: "#/components/schemas/StaticContentText"
    AppType:
      type: "string"
      description: "Enum listing unique identifiers for app services."
      enum:
      - "custom"
    MessageId:
      type: "string"
      description: "UUID that references a message"
      example: "57904eb6-5352-4c5e-adf6-5f100572cf5d"
    AcknowledgementRequest:
      type: object
      description: "Request body for acknowledgement API"
      properties:
        sender:
          $ref: '#/components/schemas/Participant'
        conversationIdentifier:
          type: string
          description: Conversation Identifier
          maxLength: 240
        acknowledgements:
          type: array
          minItems: 1
          maxItems: 25
          description: "List of Read and Delivered acknowledgements"
          items:
            $ref: '#/components/schemas/Acknowledgement'
      required:
        - sender
        - conversationIdentifier
        - acknowledgements
    Acknowledgement:
      type: object
      properties:
        acknowledgementType:
          $ref: '#/components/schemas/AcknowledgementType'
        acknowledgedConversationEntryIdentifier:
          type: string
          description: The unique identifier for the conversation entry this acknowledgement is associated with
        acknowledgmentCreatedConversationEntryIdentifier:
          type: string
          description: The client-supplied unique identifier to set when storing the new acknowledgement conversation entry
        acknowledgementTimestamp:
          type: string
          description: The timestamp associated with the acknowledgement
      required:
        - acknowledgementType
        - acknowledgedConversationEntryIdentifier
        - acknowledgmentCreatedConversationEntryIdentifier
        - acknowledgementTimestamp
    AcknowledgementResponse:
      type: object
      description: "Response after sending read / delivered acknowledgment"
      properties:
        success:
          type: boolean
          description: Status of the consent status update request
      required:
        - success
servers:
- url: "/api/v1/"
openapi: "3.0.0"
paths:
  /route:
    post:
      summary: "Route API to get routing instructions from Salesforce"
      operationId: "post-route"
      responses:
        202:
          description: "Accepted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostRouteResponse"
        default:
          description: "Unsuccessful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: "Create PSR for given conversation."
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostRouteRequest"
      parameters:
      - name: "Authorization"
        schema:
          type: "string"
        description: "The access token generated to make requests to the Interaction Service APIs"
        in: "header"
        required: true
        example: "Bearer XXXXXX"
      - name: "OrgId"
        schema:
          type: "string"
        description: "Organization Id used to verify the request against the auth token"
        in: "header"
        required: true
        example: "00Dxxxxxxxxxxxx"
      - name: "AuthorizationContext"
        schema:
          type: "string"
        description: "Specify the extra info for request authorization"
        in: "header"
        required: true
      - name: "RequestId"
        schema:
          type: "string"
        description: "UUID that references this request"
        in: "header"
        required: true
        example: "f7904eb6-5352-4c5e-adf6-5f100572cf5d"
    delete:
      summary: "Delete PSR for given conversation"
      operationId: "delete-route"
      responses:
        202:
          description: "Accepted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteRouteResponse"
        default:
          description: "Unsuccessful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: "Delete PSR for given conversation."
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteRouteRequest"
      parameters:
      - name: "Authorization"
        schema:
          type: "string"
        description: "The access token generated to make requests to the Interaction Service APIs"
        in: "header"
        required: true
        example: "Bearer XXXXXX"
      - name: "OrgId"
        schema:
          type: "string"
        description: "Organization Id used to verify the request against the auth token"
        in: "header"
        required: true
        example: "00Dxxxxxxxxxxxx"
      - name: "AuthorizationContext"
        schema:
          type: "string"
        description: "Specify the extra info for request authorization"
        in: "header"
        required: true
      - name: "RequestId"
        schema:
          type: "string"
        description: "UUID that references this request"
        in: "header"
        required: true
        example: "f7904eb6-5352-4c5e-adf6-5f100572cf5d"
  /interactions:
    post:
      summary: "Create interactions"
      operationId: "post-interaction"
      responses:
        202:
          description: "Accepted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostInteractionResponse"
        default:
          description: "Unsuccessful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: "Create a interactions associated to a Conversation."
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/InteractionRequest"
      parameters:
      - name: "Authorization"
        schema:
          type: "string"
        description: "The access token generated to make requests to the Interaction Service APIs"
        in: "header"
        required: true
        example: "Bearer XXXXXX"
      - name: "OrgId"
        schema:
          type: "string"
        description: "Organization Id used to verify the request against the auth token"
        in: "header"
        required: true
        example: "00Dxxxxxxxxxxxx"
      - name: "AuthorizationContext"
        schema:
          type: "string"
        description: "Specify the extra info for request authorization"
        in: "header"
        required: true
        example: "Partner_ChannelDefinition"
      - name: "RequestId"
        schema:
          type: "string"
        description: "UUID that references this request"
        in: "header"
        required: true
        example: "f7904eb6-5352-4c5e-adf6-5f100572cf5d"
  /agentWork:
    post:
      summary: "Create agent work"
      operationId: "post-agent-work"
      responses:
        202:
          description: "Accepted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgentWorkResponse"
        default:
          description: "Unsuccessful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: "Create an agent work."
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AgentWorkRequest"
      parameters:
      - name: "Authorization"
        schema:
          type: "string"
        description: "The access token generated to make requests to the Interaction Service APIs"
        in: "header"
        required: true
        example: "Bearer XXXXXX"
      - name: "OrgId"
        schema:
          type: "string"
        description: "Organization Id used to verify the request against the auth token"
        in: "header"
        required: true
        example: "00Dxxxxxxxxxxxx"
      - name: "AuthorizationContext"
        schema:
          type: "string"
        description: "Specify the extra info for request authorization"
        in: "header"
        required: true
      - name: "RequestId"
        schema:
          type: "string"
        description: "UUID that references this request"
        in: "header"
        required: true
        example: "f7904eb6-5352-4c5e-adf6-5f100572cf5d"
  /consent:
    patch:
      summary: "Update consent status"
      operationId: "patch-consent-update"
      responses:
        default:
          description: "Unsuccessful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConsentResponse"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConsentResponse"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConsentRequest"
      parameters:
      - name: "Authorization"
        schema:
          type: "string"
        description: "The access token generated to make requests to the Interaction Service APIs"
        in: "header"
        required: true
        example: "Bearer XXXXXX"
      - name: "OrgId"
        schema:
          type: "string"
        description: "Organization Id used to verify the request against the auth token"
        in: "header"
        required: true
        example: "00Dxxxxxxxxxxxx"
      - name: "AuthorizationContext"
        schema:
          type: "string"
        description: "Specify the extra info for request authorization"
        in: "header"
        required: true
      - name: "RequestId"
        schema:
          type: "string"
        description: "UUID that references this request"
        in: "header"
        required: true
        example: "f7904eb6-5352-4c5e-adf6-5f100572cf5d"
  /acknowledgement:
    post:
      summary: Marks messages as read / delivered
      operationId: post-acknowledgement
      responses:
        default:
          description: Unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcknowledgementResponse'
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcknowledgementResponse'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcknowledgementRequest'
      parameters:
        - in: header
          name: Authorization
          description: "The access token generated to make requests to the Interaction Service APIs"
          example: Bearer XXXXXX
          required: true
          schema:
            type: string
        - name: OrgId
          in: header
          description: "Organization Id used to verify the request against the auth token"
          example: 00Dxxxxxxxxxxxx
          required: true
          schema:
            type: string
        - name: AuthorizationContext
          in: header
          description: "Specify the extra info for request authorization"
          required: true
          schema:
            type: string
        - name: RequestId
          in: header
          description: "UUID that references this request"
          required: true
          schema:
            type: string
          example: f7904eb6-5352-4c5e-adf6-5f100572cf5d
info:
  title: "Interaction"
  version: "0.0.1"
  description: "APIs for interaction service"
