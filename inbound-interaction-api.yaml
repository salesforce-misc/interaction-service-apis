security:
- BearerAuth: []
components:
  securitySchemes:
    BearerAuth:
      name: "Authorization"
      bearerFormat: "AccessToken"
      type: "http"
      scheme: "bearer"
      in: "header"
  schemas:
    AbstractChoicesResponse:
      type: "object"
      properties:
        formatType:
          $ref: "#/components/schemas/FormatType"
      required:
      - "formatType"
      discriminator:
        propertyName: "formatType"
        mapping:
          Selections: "#/components/schemas/ChoicesResponseSelections"
    DimensionType:
      type: "string"
      description: "If specified indicates how the dimension field should be interpreted."
      enum:
      - "PIXEL"
      - "RATIO"
    SelectInput:
      description: "A single or multiple select input"
      allOf:
      - $ref: "#/components/schemas/AbstractInput"
      - type: "object"
        properties:
          multipleSelection:
            type: "boolean"
          optionItems:
            type: "array"
            minItems: 1
            items:
              $ref: "#/components/schemas/TitleOptionItem"
        required:
        - "optionItems"
    PostRouteResponse:
      type: "object"
      properties:
        reasonForNotRouting:
          type: "string"
          description: "Reason for not routing this request"
          maxLength: 240
        routingCorrelationId:
          type: "string"
          description: "CorrelationId which should be associated in agent work"
          maxLength: 240
        success:
          type: "boolean"
          description: "Indicates the routing request was successful or not"
          maxLength: 240
        contextParamMap:
          type: "object"
          description: "Additional context related to routing response like userId, queueId, etc"
          additionalProperties:
            type: "string"
        psrId:
          type: "string"
          description: "Salesforce pendingServiceRouting Id"
          maxLength: 240
        workItemId:
          type: "string"
          description: "Salesforce WorkItem Id"
          maxLength: 240
        errors:
          $ref: "#/components/schemas/RoutingError"
    ChoicesButtons:
      description: "Choices with button options"
      allOf:
      - $ref: "#/components/schemas/AbstractChoices"
      - type: "object"
        properties:
          text:
            type: "string"
          optionItems:
            minItems: 1
            description: "Items must be of type TitleOptionItem."
            type: "array"
            items:
              $ref: "#/components/schemas/TitleOptionItem"
        required:
        - "text"
        - "optionItems"
    DocumentAsset:
      description: "A document asset of a message."
      allOf:
      - $ref: "#/components/schemas/AbstractAsset"
    AbstractInputSection:
      description: "Common attributes for all input section types"
      type: "object"
      properties:
        sectionType:
          $ref: "#/components/schemas/InputSectionType"
      required:
      - "sectionType"
      discriminator:
        propertyName: "sectionType"
    FormInputs:
      description: "A form with inputs"
      allOf:
      - $ref: "#/components/schemas/AbstractForm"
      - type: "object"
        properties:
          formTitle:
            $ref: "#/components/schemas/AbstractTitleItem"
          introScreen:
            $ref: "#/components/schemas/AbstractFormIntroScreen"
          images:
            type: "array"
            items:
              $ref: "#/components/schemas/ImageAsset"
          message:
            $ref: "#/components/schemas/AbstractTitleItem"
          reply:
            $ref: "#/components/schemas/AbstractTitleItem"
          sections:
            type: "array"
            minItems: 1
            items:
              $ref: "#/components/schemas/AbstractInputSection"
        required:
        - "formTitle"
        - "sections"
    AcknowledgementResponse:
      type: object
      description: "Response after sending read / delivered acknowledgment"
      properties:
        success:
          type: boolean
          description: Status of the Acknowledgement request
      required:
      - success
    TitleItemWithInteractions:
      additionalProperties: false
      type: "object"
      properties:
        titleItem:
          $ref: "#/components/schemas/AbstractTitleItem"
        interactionItems:
          type: "array"
          minItems: 1
          items:
            $ref: "#/components/schemas/AbstractTitleInteractionItem"
      required:
      - "titleItem"
      - "interactionItems"
    RoutingWorkType:
      type: "string"
      description: "work event type"
      enum:
      - "Assigned"
      - "Accepted"
      - "Cancelled"
      - "Closed"
      - "Declined"
      - "TransferError"
      - "Transferred"
    FieldRestrictionType:
      type: "string"
      description: "The set field indicated the restriction type for this FieldRestriction."
      enum:
      - "StringFieldRestriction"
      - "MimeTypeRestriction"
      - "FileSizeRestriction"
      - "DimensionRestriction"
      - "ArrayRestriction"
      - "RequiredFieldRestriction"
      - "TypeRestriction"
    BooleanValue:
      description: "A boolean value"
      allOf:
      - $ref: "#/components/schemas/AbstractValue"
      - type: "object"
        properties:
          booleanValue:
            type: "boolean"
        required:
        - "booleanValue"
    AgentWorkDetails:
      description: "Details about Agent Work"
      type: "object"
      properties:
        existPsr:
          type: "boolean"
          description: "If there is an existed Pending Service Routing"
        capacityPercentage:
          type: "number"
          format: "double"
          description: "Percentage of the capacity"
        capacityWeight:
          type: "number"
          format: "double"
          description: "Weight of the capacity"
        psrId:
          type: "string"
          description: "Id of Pending Service Routing"
        routingContext:
          $ref: "#/components/schemas/RoutingContext"
      required:
      - "existPsr"
      - "routingContext"
    FormResponseInputs:
      description: "The input response values to a Form Message"
      allOf:
      - $ref: "#/components/schemas/AbstractFormResponse"
      - type: "object"
        properties:
          formTitle:
            $ref: "#/components/schemas/AbstractTitleItem"
          inputValues:
            type: "array"
            items:
              $ref: "#/components/schemas/AbstractInputValue"
        required:
        - "inputValues"
    AbstractInputValue:
      type: "object"
      properties:
        inputValueType:
          $ref: "#/components/schemas/InputValueType"
        inputId:
          $ref: "#/components/schemas/InputId"
        inputlabel:
          $ref: "#/components/schemas/AbstractTitleItem"
      required:
      - "inputValueType"
      - "inputId"
      discriminator:
        propertyName: "inputValueType"
    TextInput:
      description: "A text input"
      allOf:
      - $ref: "#/components/schemas/AbstractInput"
      - type: "object"
        properties:
          regEx:
            type: "string"
          prefixText:
            type: "string"
          maximumCharacterCount:
            type: "integer"
          keyboardType:
            $ref: "#/components/schemas/TextInputKeyboardType"
          textInputType:
            $ref: "#/components/schemas/TextInputType"
          textContentType:
            $ref: "#/components/schemas/TextInputContentType"
          placeholder:
            type: "string"
    ChoicesListPicker:
      description: "Choices as a list picker"
      allOf:
      - $ref: "#/components/schemas/AbstractChoices"
      - type: "object"
        properties:
          images:
            type: "array"
            items:
              $ref: "#/components/schemas/ImageAsset"
          title:
            type: "string"
          message:
            $ref: "#/components/schemas/AbstractTitleItem"
          reply:
            $ref: "#/components/schemas/AbstractTitleItem"
          optionItems:
            type: "array"
            minItems: 1
            items:
              $ref: "#/components/schemas/TitleOptionItem"
        required:
        - "title"
        - "optionItems"
    UrlValue:
      description: "An url value"
      allOf:
      - $ref: "#/components/schemas/AbstractValue"
      - type: "object"
        properties:
          urlValue:
            $ref: "#/components/schemas/Url"
        required:
        - "urlValue"
    ChoicesMessage:
      description: "MT message with choices"
      allOf:
      - $ref: "#/components/schemas/AbstractMessage"
      - type: "object"
        properties:
          choices:
            $ref: "#/components/schemas/AbstractChoices"
        required:
        - "choices"
    InputValueType:
      type: "string"
      enum:
      - "SingleInputValue"
      - "SelectedOptionsInputValue"
    DimensionRestriction:
      description: "Dimension restrictions for the message field."
      allOf:
      - $ref: "#/components/schemas/AbstractFieldRestriction"
      - type: "object"
        properties:
          x:
            type: "float"
            description: "The x dimension limits for the media. Required."
          y:
            type: "float"
            description: "The y dimension limits for the media. Required."
          dimensionType:
            description: "Indicates how the dimension field should be interpreted. Required."
            $ref: "#/components/schemas/DimensionType"
        required:
        - "dimensionType"
        - "x"
        - "y"
    AbstractMessage:
      description: "Base definition for all message types"
      type: "object"
      properties:
        inReplyToMessageId:
          $ref: "#/components/schemas/InReplyToMessageId"
        customHandlingType:
          $ref: "#/components/schemas/CustomHandlingType"
        id:
          $ref: "#/components/schemas/MessageId"
        messageType:
          $ref: "#/components/schemas/MessageType"
        references:
          type: "array"
          items:
            $ref: "#/components/schemas/RecordReference"
      required:
      - "id"
      - "messageType"
      discriminator:
        propertyName: "messageType"
        mapping:
          ChoicesResponseMessage: "#/components/schemas/ChoicesResponseMessage"
          StaticContentMessage: "#/components/schemas/StaticContentMessage"
          FormMessage: "#/components/schemas/FormMessage"
          ChoicesMessage: "#/components/schemas/ChoicesMessage"
          FormResponseMessage: "#/components/schemas/FormResponseMessage"
    CapabilitiesRequest:
      description: "Channel Capabilities details payload"
      type: "object"
      properties:
        capabilities:
          $ref: "#/components/schemas/Capabilities"
      required:
      - "capabilities"
    SingleInputValue:
      description: "Single value of an input"
      allOf:
      - $ref: "#/components/schemas/AbstractInputValue"
      - type: "object"
        properties:
          displayValue:
            type: "string"
          value:
            $ref: "#/components/schemas/AbstractValue"
        required:
        - "value"
    AddConversationHistoryRequest:
      type: "object"
      properties:
        channelAddressIdentifier:
          type: "string"
          description: "Messaging Channel platform key"
        conversationParticipants:
          minItems: 1
          description: "list of participants in the conversation"
          maxItems: 3
          type: "array"
          items:
            $ref: "#/components/schemas/ConversationParticipant"
        conversationEntries:
          minItems: 1
          description: "list of messages sent in the conversation"
          maxItems: 5
          type: "array"
          items:
            $ref: "#/components/schemas/ConversationEntryHistory"
        messagingSession:
          $ref: "#/components/schemas/AbstractMessagingSession"
      required:
      - "channelAddressIdentifier"
      - "conversationParticipants"
      - "conversationEntries"
    CustomIntegrationType:
      type: "string"
      description: "Type of custom Integration"
      enum:
      - "CustomChannelIntegration"
      - "CustomBotIntegration"
    InteractionRequest:
      type: "object"
      properties:
        json:
          $ref: "#/components/schemas/InteractionRequestJson"
        attachments:
          minItems: 0
          maxItems: 1
          type: "array"
          nullable: true
          items:
            type: "string"
            format: "binary"
      required:
      - "json"
    ConversationParticipant:
      description: "a participant in the conversation"
      type: "object"
      properties:
        leftTime:
          type: "integer"
          format: "int64"
          description: "The time when the participant left the conversation"
        displayName:
          type: "string"
          description: "name of the participant"
        participant:
          $ref: "#/components/schemas/Participant"
        joinedTime:
          type: "integer"
          format: "int64"
          description: "name of the participant"
      required:
      - "participant"
      - "joinedTime"
    PostParticipantResponse:
      type: object
      description: "Response after performing actions on a conversation"
      properties:
        success:
          type: boolean
          description: Indicates whether the requested action was successfully performed
        errorDetail:
          $ref: '#/components/schemas/Error'
      required:
        - success
    PostParticipantRequest:
      description: 'Request to perform specified operation on a Participant for a Conversation'
      type: object
      properties:
        conversationIdentifier:
          type: string
        participants:
          type: array
          items:
            $ref: '#/components/schemas/Participant'
          maxItems: 1
          minItems: 1
        operation:
          $ref: '#/components/schemas/ParticipantOperationType'
      required:
        - conversationIdentifier
        - participants
        - operation
    ParticipantOperationType:
      type: string
      enum:
        - Remove
    TypingStartedIndicator:
      description: "A typing started indicator entry"
      allOf:
      - $ref: "#/components/schemas/AbstractEntry"
      - type: "object"
        properties:
          timestamp:
            type: "integer"
            format: "int64"
        required:
        - "timestamp"
    ChannelCapabilities:
      description: "A set of message type capabilities for a channel."
      type: "object"
      properties:
        channelType:
          description: "Channel type. Optional."
          $ref: "#/components/schemas/ChannelType"
        customIntegration:
          description: "Custom Integration. Optional"
          $ref: "#/components/schemas/AbstractCustomIntegration"
        messageTypeCapabilities:
          minItems: 1
          description: "Message Type capabilities."
          type: "array"
          items:
            $ref: "#/components/schemas/MessageTypeCapabilities"
      required:
      - "messageTypeCapabilities"
    RoutingInfo:
      type: "object"
      description: "Routing related info which will be given by partner"
      properties:
        routingAttributes:
          type: "object"
          description: "List of Key value pairs defining the channel variable name mapped to the value"
          additionalProperties:
            type: "string"
        queueId:
          type: "string"
          description: "Enter queueId for the queue"
        flow:
          description: "Enter Flow details which needs to be used for routing"
          $ref: "#/components/schemas/FlowInfo"
    PostConversationEntryResponse:
      type: "object"
      properties:
        success:
          type: "boolean"
      required:
      - "success"
    ChoicesCarousel:
      description: "Choices as a carousel with options"
      allOf:
        - $ref: "#/components/schemas/AbstractChoices"
        - type: "object"
          properties:
            title:
              type: "string"
            items:
              minItems: 1
              description: "Items must must contain more then one TitleOptionItem for the choice options."
              type: "array"
              items:
                $ref: "#/components/schemas/TitleItemWithInteractions"
            images:
              type: "array"
              items:
                $ref: "#/components/schemas/ImageAsset"
          required:
            - "items"
    ErrorAttachmentUploadResult:
      description: "Attachment upload that failed"
      allOf:
      - $ref: "#/components/schemas/AbstractAttachmentUploadResult"
      - type: "object"
        properties:
          errorMessage:
            type: "string"
            description: "A non localized message. Do not use for display in UI."
          errorType:
            description: "The type of error. To be used for displaying a localized error message in UI"
            $ref: "#/components/schemas/AttachmentUploadErrorType"
        required:
        - "errorType"
    UniqueIdentifier:
      type: "string"
      description: "An string identifier that identifies objects or items uniquely per message instance"
      example: "7c4cce61-df7a-4a5b-a949-3d6e3ea278b5"
    SelectedOption:
      description: "A selection option from a ChoicesSelectionsMessage"
      additionalProperties: false
      type: "object"
      properties:
        optionTitle:
          $ref: "#/components/schemas/AbstractTitleItem"
        optionIdentifier:
          $ref: "#/components/schemas/UniqueIdentifier"
      required:
      - "optionIdentifier"
    InputType:
      type: "string"
      enum:
      - "SelectInput"
      - "SelectNavigationInput"
      - "OptionPickerInput"
      - "DatePickerInput"
      - "DateTimePickerInput"
      - "TextInput"
    Participant:
      description: "A Participant"
      type: "object"
      properties:
        appType:
          $ref: "#/components/schemas/AppType"
        subject:
          type: "string"
          description: "Subject identifier for this participant"
          example: "005x00000000001"
        role:
          $ref: "#/components/schemas/ParticipantRole"
          description: "The role of this participant"
      required:
      - "appType"
      - "subject"
      - "role"
    Note:
      description: "A note entry (for private whisper messages)"
      allOf:
      - $ref: "#/components/schemas/AbstractEntry"
      - type: "object"
        properties:
          abstractMessage:
            $ref: "#/components/schemas/AbstractMessage"
        required:
        - "abstractMessage"
    TextValue:
      description: "A text value"
      allOf:
      - $ref: "#/components/schemas/AbstractValue"
      - type: "object"
        properties:
          textValue:
            type: "string"
        required:
        - "textValue"
    TitleImageItem:
      allOf:
      - $ref: "#/components/schemas/AbstractTitleItem"
      - type: "object"
        properties:
          imageSubTitle:
            type: "string"
          imageId:
            $ref: "#/components/schemas/UniqueId"
        required:
        - "imageId"
    ChoicesQuickReplies:
      description: "Choices with quick reply options"
      allOf:
        - $ref: "#/components/schemas/AbstractChoices"
        - type: "object"
          properties:
            images:
              type: "array"
              items:
                $ref: "#/components/schemas/ImageAsset"
            text:
              $ref: "#/components/schemas/Text"
            optionItems:
              type: "array"
              minItems: 1
              items:
                $ref: "#/components/schemas/TitleOptionItem"
          required:
            - "text"
            - "optionItems"
    AppType:
      type: "string"
      description: "Enum listing unique identifiers for app services."
      enum:
      - "custom"
      - "agent"
      - "chatbot"
      - "conversation"
      - "live_message"
      - "iamessage"
    Link:
      description: "A web link."
      type: "object"
      properties:
        url:
          type: "string"
      required:
      - "url"
    AbstractEntry:
      description: "Base definition for all entry types"
      type: "object"
      properties:
        entryType:
          $ref: "#/components/schemas/EntryType"
        id:
          $ref: "#/components/schemas/EntryId"
      required:
      - "id"
      - "entryType"
      discriminator:
        propertyName: "entryType"
    RoutingFailureType:
      type: "string"
      description: "How routing failed or succeeded"
      enum:
      - "None"
      - "Unknown"
      - "SubmissionError"
      - "RoutingError"
      - "Cancelled"
    InputSectionType:
      type: "string"
      enum:
        - "SingleInputSection"
    AddConversationHistoryResponse:
      type: "object"
      properties:
        success:
          type: "boolean"
        conversationIdentifier:
          type: string
        messagingSessionId:
          type: string
      required:
      - "success"
      - "messagingSessionId"
    AbstractMessagingSession:
      type: object
      description: create/attach a messaging session with the conversation
      properties:
        messagingSessionRequestType:
          $ref: '#/components/schemas/MessagingSessionRequestType'
      discriminator:
        propertyName: messagingSessionRequestType
        mapping:
          EstablishMessagingSession: '#/components/schemas/EstablishMessagingSession'
          AttachMessagingSession: '#/components/schemas/AttachMessagingSession'
      required:
        - messagingSessionRequestType
    MessagingSessionRequestType:
      type: string
      enum:
        - EstablishMessagingSession
        - AttachMessagingSession
    AttachMessagingSession:
      allOf:
        - $ref: '#/components/schemas/AbstractMessagingSession'
        - type: object
          properties:
            payload:
              $ref: '#/components/schemas/AttachMessagingSessionRequest'
          required:
            - payload
    EstablishMessagingSession:
      allOf:
        - $ref: '#/components/schemas/AbstractMessagingSession'
        - type: object
          properties:
            payload:
              $ref: '#/components/schemas/EstablishMessagingSessionRequest'
          required:
            - payload
    AttachMessagingSessionRequest:
      type: object
      properties:
        sessionId:
          type: string
          description: the record id of the messaging session
      required:
        - sessionId
    EstablishMessagingSessionRequest:
      type: object
      properties:
        startTime:
          type: integer
          format: int64
          description: the time in milliseconds at which the session was started. System could use the seconds part of the given time as per need.
        endTime:
          type: integer
          format: int64
          description: the time in milliseconds at which the session was ended/closed. System could use the seconds part of the given time as per need.
      required:
        - startTime
    AgentActionVisibilityItem:
      description: "Agent action visibility info"
      type: "object"
      properties:
        agentAction:
          $ref: "#/components/schemas/AgentActionEnum"
        visible:
          type: "boolean"
          description: "Flag to indicate action visibility"
      required:
        - "agentAction"
        - "visible"
    AbstractAsset:
      description: "The base type of an asset from which concrete asset types extends."
      type: "object"
      properties:
        description:
          type: "string"
        id:
          $ref: "#/components/schemas/UniqueId"
        mimeType:
          $ref: "#/components/schemas/MimeType"
        assetUrl:
          $ref: "#/components/schemas/Url"
        referenceId:
          $ref: "#/components/schemas/UniqueId"
        assetType:
          $ref: "#/components/schemas/AssetType"
      required:
        - "id"
        - "assetType"
        - "mimeType"
        - "assetUrl"
      discriminator:
        propertyName: "assetType"
    AssetReferenceValue:
      description: "An asset reference value. Assets can be image, audio, video, document."
      allOf:
      - $ref: "#/components/schemas/AbstractValue"
      - type: "object"
        properties:
          assetReferenceId:
            $ref: "#/components/schemas/UniqueId"
        required:
        - "assetReferenceId"
    CapabilityFieldRestriction:
      description: "A list of restrictions on the fields on the message format type."
      type: "object"
      properties:
        restriction:
          description: "Restriction details"
          $ref: "#/components/schemas/AbstractFieldRestriction"
        fieldJsonPath:
          type: "string"
          description: "JsonPath like pointer to a field in the message json which the restriction is applied. This field is optional for some restriction types. Required. There is only support for the root ($) and child (.) operators. - $.some.field - $.some.array - $.some.array.field"
      required:
      - "fieldJsonPath"
      - "restriction"
    PostInteractionResponse:
      type: "object"
      properties:
        conversationIdentifier:
          type: "string"
          description: "The conversation identifier associated with the work"
        id:
          type: "string"
        workItemIds:
          type: "array"
          items:
            type: "string"
          description: "List of WorkItem Ids"
        success:
          type: "boolean"
    GetConversationEntriesResponse:
      type: "object"
      description: "Response after fetching conversation entries"
      properties:
        success:
          type: "boolean"
          description: "Indicates whether the requested action was successfully performed"
        conversationEntries:
          minItems: 0
          description: "List of entries present in the conversation"
          maxItems: 20
          type: "array"
          items:
            $ref: "#/components/schemas/ConversationEntryResponse"
    NamedValue:
      description: "A value with a unique name"
      additionalProperties: false
      type: "object"
      properties:
        name:
          type: "string"
        value:
          $ref: "#/components/schemas/AbstractValue"
      required:
      - "name"
      - "value"
    ConversationEntryResponse:
      type: "object"
      description: "Object for holding a single conversation entry in a conversation"
      properties:
        clientTimestamp:
          format: "int64"
          description: "Time at which the message was sent in the conversation"
          type: "integer"
          example: 1688190840000
        sender:
          $ref: "#/components/schemas/Participant"
        entryPayload:
          $ref: "#/components/schemas/AbstractEntry"
    TitleItem:
      allOf:
      - $ref: "#/components/schemas/AbstractTitleItem"
    MimeType:
      type: "string"
      description: "A mime type"
    Url:
      type: "string"
      description: "A url"
    AttachmentUploadErrorType:
      type: "string"
      enum:
      - "StorageLimitExceeded"
      - "AttachmentTooLarge"
      - "AttachmentNotFound"
      - "AttachmentUploadNotEnabled"
      - "AttachmentUploadNotAllowed"
      - "InternalServerError"
    ConsentEnum:
      type: "string"
      description: "Messaging End User's messaging consent status"
      enum:
      - "OptedOut"
      - "ImplicitlyOptedIn"
      - "ExplicitlyOptedIn"
      - "DoublyOptedIn"
    AgentWorkRequest:
      description: "Payload for creating AgentWork request"
      type: "object"
      properties:
        capacityPercentage:
          type: "double"
          description: "Capacity Percentage of the WorkItem"
        capacityWeight:
          type: "double"
          description: "Capacity Weight of the WorkItem"
        workItemId:
          description: "Salesforce WorkItem Id"
          type: "string"
          maxLength: 15
          minLength: 15
        agentActionVisibilities:
          type: "array"
          description: "List of agent action visibilities"
          items:
            $ref: "#/components/schemas/AgentActionVisibilityItem"
        routingContext:
          $ref: "#/components/schemas/RoutingContext"
        userId:
          type: "string"
          description: "Salesforce User Id or External User Id"
      required:
      - "userId"
      - "workItemId"
    FormResultType:
      type: "string"
      enum:
      - "FormRecordsResult"
      - "FormErrorResult"
    ConsentResponse:
      description: "Response after updating Consent Status of the Messaging End User from core"
      type: "object"
      properties:
        errorDetail:
          $ref: "#/components/schemas/Error"
        success:
          type: "boolean"
          description: "Status of the consent status update request"
      required:
      - "success"
    DateValue:
      description: "A date value as defined by rfc3339"
      allOf:
      - $ref: "#/components/schemas/AbstractValue"
      - type: "object"
        properties:
          dateValue:
            type: "string"
            format: "date"
        required:
        - "dateValue"
    OptionValue:
      description: "A value that presents an option of a choice or a form"
      additionalProperties: false
      type: "object"
      properties:
        value:
          $ref: "#/components/schemas/AbstractValue"
        optionIdentifier:
          $ref: "#/components/schemas/UniqueIdentifier"
      required:
      - "optionIdentifier"
      - "value"
    EntryId:
      type: "string"
      description: "UUID that references this entry"
      example: "f7904eb6-5352-4c5e-adf6-5f100572cf5d"
    CalendarEventItemType:
      type: "string"
      description: "The type of a calendar event"
      enum:
      - "CalendarEventOptionsItem"
    TitleInteractionItemType:
      type: "string"
      enum:
      - "TitleLinkItem"
      - "TitleOptionItem"
    QueueRoutingConfigDetails:
      description: "Queue routing based configuration details."
      allOf:
      - $ref: "#/components/schemas/RoutingConfigurationDetails"
      - type: "object"
        properties:
          queueId:
            type: "string"
    RecordId:
      type: "string"
      description: "An id of an application record"
    PostRouteRequest:
      description: "Payload for getting routing instructions from salesforce"
      type: "object"
      properties:
        conversationIdentifier:
          type: "string"
          description: "The conversation identifier associated with the work"
        routingInfo:
          description: "Details to provide the core routing hook. Optional"
          $ref: "#/components/schemas/RoutingInfo"
        routingType:
          type: "string"
          description: "Details to provide the core routing hook. Optional"
          $ref: "#/components/schemas/RoutingType"
      required:
      - "conversationIdentifier"
      - "routingType"
    AcknowledgementRequest:
      description: "Request body for acknowledgement API"
      type: "object"
      properties:
        conversationIdentifier:
          type: "string"
          description: "Conversation Identifier"
          maxLength: 240
        sender:
          $ref: "#/components/schemas/Participant"
        acknowledgements:
          minItems: 1
          maxItems: 25
          description: "List of Read and Delivered acknowledgements"
          type: "array"
          items:
            $ref: "#/components/schemas/Acknowledgement"
      required:
      - "sender"
      - "conversationIdentifier"
      - "acknowledgements"
    ExperienceTypeRef:
      type: "string"
      description: "Unique reference to an Experience Type"
    FormMessage:
      description: "MT Form message"
      allOf:
      - $ref: "#/components/schemas/AbstractMessage"
      - type: "object"
        properties:
          form:
            $ref: "#/components/schemas/AbstractForm"
        required:
        - "form"
    AbstractCalendarEventItem:
      description: "The base type for calendar events"
      type: "object"
      properties:
        itemType:
          $ref: "#/components/schemas/CalendarEventItemType"
        location:
          $ref: "#/components/schemas/LocationItem"
        imageId:
          $ref: "#/components/schemas/UniqueId"
        title:
          type: "string"
        timezoneOffset:
          type: "integer"
        referenceId:
          $ref: "#/components/schemas/UniqueId"
      required:
      - "itemType"
      - "title"
      discriminator:
        propertyName: "itemType"
    ImageAsset:
      description: "An image asset of a message."
      allOf:
      - $ref: "#/components/schemas/AbstractAsset"
    CompositeValue:
      description: "A composite value that contains a collection of named values"
      allOf:
      - $ref: "#/components/schemas/AbstractValue"
      - type: "object"
        properties:
          items:
            type: "array"
            minItems: 1
            items:
              $ref: "#/components/schemas/NamedValue"
        required:
        - "items"
    AttachmentUploadResultType:
      type: "string"
      enum:
        - "CompletedAttachmentUploadResult"
        - "PendingAttachmentUploadResult"
        - "ErrorAttachmentUploadResult"
    RoutingType:
      type: "string"
      description: "Routing type - sent in routing related events as well as in the RoutingContext"
      enum:
      - "Initial"
      - "Transfer"
      - "Conference"
    DeleteRouteRequest:
      description: "Payload for deleting route (psr)"
      type: "object"
      properties:
        conversationIdentifier:
          type: "string"
          description: "The conversation identifier associated with the work"
        cancelReason:
          $ref: "#/components/schemas/CancelReason"
      required:
      - "conversationIdentifier"
    PostConversationRequest:
      description: "Payload for establishing conversation request"
      type: "object"
      properties:
        channelAddressIdentifier:
          type: "string"
          description: "Conversation channel address identifier"
        participants:
          minItems: 1
          maxItems: 1
          description: "List of conversation participants"
          type: "array"
          items:
            $ref: "#/components/schemas/Participant"
      required:
      - "channelAddressIdentifier"
      - "participants"
    AbstractFormResult:
      type: "object"
      properties:
        resultType:
          $ref: "#/components/schemas/FormResultType"
      required:
      - "resultType"
      discriminator:
        propertyName: "resultType"
    StaticContentExperienceType:
      description: "A uni-directional Experience Type Message"
      allOf:
      - $ref: "#/components/schemas/AbstractStaticContent"
      - type: "object"
        properties:
          message:
            type: "string"
          values:
            type: "array"
            minItems: 1
            items:
              $ref: "#/components/schemas/ExperienceTypeValue"
        required:
        - "values"
    InteractionRequestJson:
      description: "JSON part of the interaction request body."
      type: "object"
      properties:
        from:
          description: "End user client identifier."
          type: "string"
          maxLength: 255
          example: ""
        to:
          description: "Destination Salesforce Channel Address Identifier"
          type: "string"
          maxLength: 240
          example: "72a6a4ec-acbc-44f6-b2b9-e444248ca843"
        routingAttributes:
          type: "object"
          description: "List of Key value pairs defining the channel variable name mapped to the value"
          additionalProperties:
            type: "string"
        interactions:
          minItems: 1
          maxItems: 1
          description: "List of interactions to add to the conversation between \"to\" and \"from\" of the request."
          type: "array"
          items:
            $ref: "#/components/schemas/AbstractInteraction"
      required:
      - "from"
      - "to"
      - "interactions"
    FormError:
      type: "object"
      properties:
        errorMessage:
          type: "string"
          description: "A non localized message. Do not use for display in UI."
        errorCode:
          type: "string"
          description: "A Salesforce API Error code. Can be used for displaying a localized error in UI"
        errorType:
          description: "The type of error. To be used for displaying a localized error message in UI"
          $ref: "#/components/schemas/FormErrorType"
      required:
      - "errorType"
      - "errorMessage"
    FormResponseMessage:
      description: "MO Form response message"
      allOf:
      - $ref: "#/components/schemas/AbstractMessage"
      - type: "object"
        properties:
          formResponse:
            $ref: "#/components/schemas/AbstractFormResponse"
        required:
        - "formResponse"
    AttachmentInteraction:
      title: "Attachments Details"
      allOf:
      - $ref: "#/components/schemas/AbstractInteraction"
      - type: "object"
        properties:
          contentLength:
            type: "integer"
            description: "Indicates the size of the file data in bytes"
          id:
            type: "string"
            example: "57904eb6-5352-4c5e-adf6-5f100572cf54"
          text:
            type: "string"
            nullable: true
            description: "Text message to send with the file."
          attachmentIndex:
            type: "integer"
      required:
      - "id"
      - "attachmentIndex"
      - "contentLength"
    RegisterCapabilitiesResponse:
      description: "Response after registering capabilities"
      type: "object"
      properties:
        errorDetail:
          $ref: "#/components/schemas/Error"
        success:
          type: "boolean"
          description: "Status of the capabilities registering request"
      required:
      - "success"
    Text:
      type: "string"
      description: "Text content"
    FormatTypeCapabilities:
      description: "A Format Type capabilities."
      type: "object"
      properties:
        formatType:
          description: "The name of the format type. Required."
          $ref: "#/components/schemas/FormatType"
        capabilityFieldRestriction:
          type: "array"
          description: "field restrictions."
          items:
            $ref: "#/components/schemas/CapabilityFieldRestriction"
      required:
      - "formatType"
    TimeSlotItemType:
      type: "string"
      description: "The type of a time slot item."
      enum:
        - "TimeSlotOptionItem"
    FileSizeRestriction:
      description: "File size restrictions for the message field."
      allOf:
      - $ref: "#/components/schemas/AbstractFieldRestriction"
      - type: "object"
        properties:
          maxSizeInKb:
            type: "integer"
            format: "int64"
            description: "The max file size in kilobytes. Required."
        required:
        - "maxSizeInKb"
    CustomChannelIntegration:
      description: "Custom channel integration"
      allOf:
      - $ref: "#/components/schemas/AbstractCustomIntegration"
      - type: "object"
        properties:
          integrationNamespace:
            type: "string"
            description: "Integration Namespace represents developer namespace if that exist or in case when it does not exist it can be orgId"
            maxLength: 240
          conversationChannelDefinitionDevName:
            type: "string"
            description: "Developer name of conversation channel definition"
            maxLength: 240
        required:
        - "conversationChannelDefinitionDevName"
        - "integrationNamespace"
    EntryType:
      type: "string"
      description: "Enum listing unique identifiers types of entries."
      enum:
      - "Message"
      - "MessageDeliveryFailed"
      - "TypingStartedIndicator"
      - "TypingStoppedIndicator"
      - "DeliveryAcknowledgement"
      - "ReadAcknowledgement"
      - "RoutingWorkResult"
      - "ParticipantChanged"
      - "RoutingResult"
      - "Note"
      - "FlagRaise"
      - "FlagLower"
      - "EndUserConsentUpdated"
      - "SessionStatusChanged"
      - "ConsultConversationInfo"
    DoubleValue:
      description: "A double value"
      allOf:
      - $ref: "#/components/schemas/AbstractValue"
      - type: "object"
        properties:
          doubleValue:
            type: "number"
            format: "double"
        required:
        - "doubleValue"
    SingleInputSection:
      description: "A form section with a single input"
      allOf:
      - $ref: "#/components/schemas/AbstractInputSection"
      - type: "object"
        properties:
          nextSectionInputId:
            $ref: "#/components/schemas/InputId"
          input:
            $ref: "#/components/schemas/AbstractInput"
          submitForm:
            type: "boolean"
        required:
        - "input"
    StaticContentAttachments:
      description: "Attachments with optional text"
      allOf:
      - $ref: "#/components/schemas/AbstractStaticContent"
      - type: "object"
        properties:
          text:
            $ref: "#/components/schemas/Text"
          attachments:
            type: "array"
            minItems: 1
            items:
              $ref: "#/components/schemas/Attachment"
        required:
        - "attachments"
    AbstractChoices:
      type: "object"
      properties:
        formatType:
          $ref: "#/components/schemas/FormatType"
      required:
      - "formatType"
      discriminator:
        propertyName: "formatType"
        mapping:
          TimePicker: "#/components/schemas/ChoicesTimePicker"
          MessageDefinition: "#/components/schemas/ChoicesMessageDefinition"
          Buttons: "#/components/schemas/ChoicesButtons"
          Carousel: "#/components/schemas/ChoicesCarousel"
          QuickReplies: "#/components/schemas/ChoicesQuickReplies"
          ListPicker: "#/components/schemas/ChoicesListPicker"
    ChannelType:
      description: "Channel type."
      enum:
      - "custom"
    AgentWorkResponse:
      type: "object"
      properties:
        id:
          type: "string"
          description: "UUID that references this response"
        agentWorkId:
          type: "string"
          description: "Agent Work Id"
        agentWorkDetails:
          description: "Details of the AgentWork"
          $ref: "#/components/schemas/AgentWorkDetails"
        success:
          type: "boolean"
    OptionPickerInput:
      description: "A picker input to select an option"
      allOf:
      - $ref: "#/components/schemas/AbstractInput"
      - type: "object"
        properties:
          selectedOptionIndex:
            type: "integer"
          optionItems:
            type: "array"
            minItems: 1
            items:
              $ref: "#/components/schemas/TitleOptionItem"
        required:
        - "optionItems"
    StaticContentMessage:
      description: "Non interactive MT or MO message with static content"
      allOf:
      - $ref: "#/components/schemas/AbstractMessage"
      - type: "object"
        properties:
          staticContent:
            $ref: "#/components/schemas/AbstractStaticContent"
        required:
        - "staticContent"
    ReferenceValue:
      description: "A reference value"
      allOf:
      - $ref: "#/components/schemas/AbstractValue"
      - type: "object"
        properties:
          referenceId:
            $ref: "#/components/schemas/UniqueId"
        required:
        - "referenceId"
    StaticContentLinks:
      description: "A list of web links."
      allOf:
      - $ref: "#/components/schemas/AbstractStaticContent"
      - type: "object"
        properties:
          links:
            minItems: 1
            maxItems: 1
            type: "array"
            items:
              $ref: "#/components/schemas/Link"
        required:
        - "links"
    ChoicesTimePicker:
      description: "Choices as a time picker"
      allOf:
      - $ref: "#/components/schemas/AbstractChoices"
      - type: "object"
        properties:
          calendarEvent:
            $ref: "#/components/schemas/CalendarEventOptionsItem"
          images:
            type: "array"
            items:
              $ref: "#/components/schemas/ImageAsset"
          message:
            $ref: "#/components/schemas/AbstractTitleItem"
          reply:
            $ref: "#/components/schemas/AbstractTitleItem"
        required:
        - "calendarEvent"
    DateTimePickerInput:
      description: "An input to pick a date and time"
      allOf:
      - $ref: "#/components/schemas/AbstractInput"
      - type: "object"
        properties:
          startDateTime:
            format: "date-time"
            description: "Start date and time value"
            type: "string"
            example: "2021-02-25 14:00:00"
          dateTimeFormat:
            type: "string"
            description: "Format for the date-time value"
            example: "MM/DD/YYYY hh:mm:ss"
          maximumDateTime:
            format: "date-time"
            description: "Maximum date time value possible"
            type: "string"
            example: "2021-02-25 14:00:00"
          minimumDateTime:
            format: "date-time"
            description: "Minimum date time value possible"
            type: "string"
            example: "2021-02-25 14:00:00"
    Attachment:
      description: "A file sent as an attachment with a message."
      additionalProperties: false
      type: "object"
      properties:
        name:
          type: "string"
        attachmentUploadResult:
          description: "Results of attachment uploads for MO messages."
          $ref: "#/components/schemas/AbstractAttachmentUploadResult"
        id:
          $ref: "#/components/schemas/UniqueId"
        mimeType:
          $ref: "#/components/schemas/MimeType"
        url:
          $ref: "#/components/schemas/Url"
        referenceId:
          $ref: "#/components/schemas/UniqueId"
      required:
      - "id"
      - "name"
      - "mimeType"
      - "url"
    TypeRestriction:
      description: "Type restrictions for a message field."
      allOf:
      - $ref: "#/components/schemas/AbstractFieldRestriction"
      - type: "object"
        properties:
          type:
            type: "string"
            description: "The type. Required."
        required:
        - "type"
    TitleVideoItem:
      allOf:
      - $ref: "#/components/schemas/AbstractTitleItem"
      - type: "object"
        properties:
          videoId:
            $ref: "#/components/schemas/UniqueId"
          imageId:
            $ref: "#/components/schemas/UniqueId"
        required:
        - "videoId"
    MessageDefinitionNameOrId:
      type: "string"
      description: "A reference to an message definition by unique name or id"
    RoutingWorkResult:
      description: "Result of routing work"
      allOf:
      - $ref: "#/components/schemas/AbstractEntry"
      - type: "object"
        properties:
          queueId:
            type: "string"
            description: "Queue assigned work"
          errorMessages:
            type: "array"
            description: "Error occurred while routing the work"
            items:
              type: "string"
          workTargetId:
            type: "string"
            description: "Routing target associated with this record (e.g.: MessagingSession)"
          agentSessionId:
            type: "string"
            description: "Assigned Agent Id"
          routingType:
            description: "Routing Type"
            $ref: "#/components/schemas/RoutingType"
          workType:
            description: "Work event type"
            $ref: "#/components/schemas/RoutingWorkType"
          botId:
            type: "string"
            description: "Bot assigned work"
          agentGroupIds:
            type: "array"
            description: "GroupId for the assigned agent"
            items:
              type: "string"
          workId:
            type: "string"
            description: "Work SFDC record ID"
        required:
        - "conversationId"
        - "workId"
        - "workTargetId"
        - "workType"
        - "errorMessages"
    RoutingResult:
      description: "Result of conversation routing if either successful or failure"
      allOf:
      - $ref: "#/components/schemas/AbstractEntry"
      - type: "object"
        properties:
          recordId:
            type: "string"
            description: "Routed record ID from omni event - if successful"
          errorMessages:
            type: "array"
            description: "Any messages that occurred during routing - can be errors from before/after omni or status messages depending on the failureType"
            items:
              type: "string"
          pendingServiceRoutingId:
            type: "string"
            description: "PSR ID from omni event - if successful"
          skipRouterCPRemovalIfNoRoutingFailures:
            type: "boolean"
            description: "Indicates whether the router CP removal should be skipped if there are no routing failures"
          workOwnerId:
            type: "string"
            description: "The SFDC Id of user who is requesting cancellation"
          routingType:
            description: "Routing Type"
            $ref: "#/components/schemas/RoutingType"
          estimatedWaitTime:
            description: "Estimated Wait Time value and whether this Estimated Wait Time is requested"
            $ref: "#/components/schemas/EstimatedWaitTime"
          failureReason:
            type: "string"
            description: "Indicates the specific reason for the failure"
          failureType:
            description: "Indicates what type of failure occurred"
            $ref: "#/components/schemas/RoutingFailureType"
          isExternallyRouted:
            type: "boolean"
            description: "Indicates whether routing is initiated from an external partner system or not"
          cancelReason:
            description: "Reason for cancelling the conference routing"
            $ref: "#/components/schemas/CancelReason"
          routingConfigurationDetails:
            description: "Routing Configuration Detail, including routing method and details associated with the routing method."
            $ref: "#/components/schemas/RoutingConfigurationDetails"
        required:
        - "routingType"
        - "failureType"
        - "errorMessages"
    AbstractLocationItem:
      description: "The base type for locations."
      type: "object"
      properties:
        name:
          type: "string"
        itemType:
          $ref: "#/components/schemas/LocationItemType"
        radius:
          type: "number"
          format: "double"
          description: "The radius of the location in meters."
        referenceId:
          $ref: "#/components/schemas/UniqueId"
        latitude:
          type: "number"
          format: "double"
          example: 37.7725
        longitude:
          type: "number"
          format: "double"
          example: -122.4311
      required:
      - "itemType"
      - "name"
      discriminator:
        propertyName: "itemType"
    RoutingContext:
      description: "Context about the routing details"
      type: "object"
      properties:
        conversationIdentifier:
          type: "string"
          description: "The conversation identifier associated with the work"
        routingType:
          type: "string"
          $ref: "#/components/schemas/RoutingType"
        routingCorrelationId:
          type: "string"
          description: "The UUID of the routing event"
      required:
      - "conversationIdentifier"
      - "routingType"
      - "routingCorrelationId"
    SelectedOptionsInputValue:
      description: "The select options of a select/picker input"
      allOf:
      - $ref: "#/components/schemas/AbstractInputValue"
      - type: "object"
        properties:
          selectedOptions:
            type: "array"
            items:
              $ref: "#/components/schemas/SelectedOption"
        required:
        - "selectedOptions"
    LocationItemType:
      type: "string"
      description: "The type of a location item."
      enum:
      - "LocationItem"
    RecordReference:
      description: "A reference to a record."
      additionalProperties: false
      type: "object"
      properties:
        recordId:
          $ref: "#/components/schemas/RecordId"
        id:
          $ref: "#/components/schemas/UniqueId"
      required:
      - "id"
      - "recordId"
    CalendarEventOptionsItem:
      description: "A calendar events with time slot options"
      allOf:
      - $ref: "#/components/schemas/AbstractCalendarEventItem"
      - type: "object"
        properties:
          identifier:
            $ref: "#/components/schemas/UniqueIdentifier"
          timeSlotOptionItems:
            type: "array"
            minItems: 1
            items:
              $ref: "#/components/schemas/TimeSlotOptionItem"
        required:
        - "identifier"
        - "timeSlotOptionItems"
    SelectNavigationInput:
      description: "A select input that allow navigation to a specifc section"
      allOf:
      - $ref: "#/components/schemas/AbstractInput"
      - type: "object"
        properties:
          optionItems:
            type: "array"
            minItems: 1
            items:
              $ref: "#/components/schemas/NavigationOptionItem"
        required:
        - "optionItems"
    LocationValue:
      description: "A location value"
      allOf:
      - $ref: "#/components/schemas/AbstractValue"
      - type: "object"
        properties:
          location:
            $ref: "#/components/schemas/AbstractLocationItem"
        required:
        - "location"
    MessageType:
      description: "The semantic type of a message. What a message does."
      type: "string"
      enum:
      - "ChoicesMessage"
      - "ChoicesResponseMessage"
      - "FormMessage"
      - "FormResponseMessage"
      - "StaticContentMessage"
      example: "StaticContentMessage"
    ParticipantRole:
      type: "string"
      enum:
      - "EndUser"
      - "Chatbot"
      - "Agent"
      - "Supervisor"
      - "System"
    ChoicesResponseMessage:
      description: "MO response message to a choices message"
      allOf:
      - $ref: "#/components/schemas/AbstractMessage"
      - type: "object"
        properties:
          choicesResponse:
            $ref: "#/components/schemas/AbstractChoicesResponse"
        required:
        - "choicesResponse"
    UniqueId:
      type: "string"
      description: "A UUID that identifies objects or items uniquely per message instance"
      example: "cbd4e3fe-f210-43b8-a4b7-dd77e39ee5e1"
    AbstractCustomIntegration:
      description: "Abstract Custom Integration."
      type: "object"
      properties:
        customIntegrationType:
          description: "Type of custom Integration"
          $ref: "#/components/schemas/CustomIntegrationType"
      required:
      - "customIntegrationType"
      discriminator:
        propertyName: "customIntegrationType"
    DateTimeValue:
      description: "A date time value as defined by rfc3339"
      allOf:
      - $ref: "#/components/schemas/AbstractValue"
      - type: "object"
        properties:
          dateTimeValue:
            type: "string"
            format: "date-time"
        required:
        - "dateTimeValue"
    FlagRaise:
      description: "A Flag Raise entry"
      allOf:
      - $ref: "#/components/schemas/AbstractEntry"
      - type: "object"
        properties:
          abstractMessage:
            $ref: "#/components/schemas/AbstractMessage"
    DatePickerInput:
      description: "An input to pick a date"
      allOf:
      - $ref: "#/components/schemas/AbstractInput"
      - type: "object"
        properties:
          maximumDate:
            type: "string"
            format: "date"
          dateFormat:
            type: "string"
            example: "MM/DD/YYYY"
          minimumDate:
            type: "string"
            format: "date"
          startDate:
            type: "string"
            format: "date"
            example: "2021-02-25"
    RoutingResultResponse:
      description: "Response after notifying routing result"
      type: "object"
      properties:
        errorDetail:
          $ref: "#/components/schemas/Error"
        success:
          type: "boolean"
          description: "Status of the routing result request"
      required:
      - "success"
    ListValue:
      description: "A composite value that contains a list of other values"
      allOf:
      - $ref: "#/components/schemas/AbstractValue"
      - type: "object"
        properties:
          items:
            type: "array"
            minItems: 1
            items:
              $ref: "#/components/schemas/AbstractValue"
        required:
        - "items"
    TimeSlotOptionItem:
      description: "A time slot option of a choice or form message."
      allOf:
      - $ref: "#/components/schemas/AbstractTimeSlotItem"
      - type: "object"
        properties:
          optionIdentifier:
            $ref: "#/components/schemas/UniqueIdentifier"
        required:
        - "optionIdentifier"
    FormSplashScreen:
      description: "A splash screen for a form"
      allOf:
      - $ref: "#/components/schemas/AbstractFormIntroScreen"
      - type: "object"
        properties:
          imageId:
            $ref: "#/components/schemas/UniqueId"
          text:
            type: "string"
          title:
            type: "string"
          buttonLabel:
            type: "string"
      required:
      - "buttonLabel"
    NavigationOptionItem:
      description: "A single select input that navigates to another input field"
      type: "object"
      properties:
        nextInputId:
          $ref: "#/components/schemas/InputId"
        optionItem:
          $ref: "#/components/schemas/TitleOptionItem"
      required:
      - "optionItem"
      - "nextInputId"
    DataDirectionEnum:
      type: "string"
      description: "The direction to order a list of data"
      enum:
      - "FROM_START"
      - "FROM_END"
    TitleOptionItem:
      allOf:
      - $ref: "#/components/schemas/AbstractTitleInteractionItem"
      - type: "object"
        properties:
          optionIdentifier:
            $ref: "#/components/schemas/UniqueIdentifier"
        required:
        - "optionIdentifier"
    StaticContentText:
      description: "Static text content"
      allOf:
      - $ref: "#/components/schemas/AbstractStaticContent"
      - type: "object"
        properties:
          text:
            $ref: "#/components/schemas/Text"
        required:
        - "text"
    ArrayRestriction:
      description: "Array restrictions for the message field."
      allOf:
      - $ref: "#/components/schemas/AbstractFieldRestriction"
      - type: "object"
        properties:
          maxItems:
            type: "integer"
            format: "int64"
            description: "The max number of items in the array. Required."
        required:
        - "maxItems"
    AbstractInteraction:
      description: "A single interaction."
      type: "object"
      properties:
        interactionType:
          $ref: "#/components/schemas/InteractionType"
        timestamp:
          format: "int64"
          description: "Interaction timestamp using Millisecond format"
          type: "integer"
          example: 1688190840000
      required:
      - "timestamp"
      - "interactionType"
      discriminator:
        propertyName: "interactionType"
        mapping:
          EntryInteraction: "#/components/schemas/EntryInteraction"
          AttachmentInteraction: "#/components/schemas/AttachmentInteraction"
    MimeTypeRestriction:
      description: "Mime type restrictions for the message field."
      allOf:
      - $ref: "#/components/schemas/AbstractFieldRestriction"
      - type: "object"
        properties:
          mimeType:
            type: "string"
            description: "The media mime type. Required."
        required:
        - "mimeType"
    PendingAttachmentUploadResult:
      description: "Attachment upload that is pending and will be handled async"
      allOf:
      - $ref: "#/components/schemas/AbstractAttachmentUploadResult"
      - type: "object"
        properties:
          referenceId:
            $ref: "#/components/schemas/UniqueId"
        required:
        - "referenceId"
    RoutingError:
      type: "object"
      description: "Routing Error"
      properties:
        errorMessage:
          type: "string"
          description: "error Message"
        errorType:
          type: "string"
          description: "error Type"
          maxLength: 240
        apiErrorCode:
          type: "string"
          description: "api error code"
          maxLength: 240
    CancelReason:
      type: "string"
      description: "Reason for cancelling the conference routing"
      enum:
        - "Unknown"
        - "Unavailable"
        - "Decline"
        - "Cancel"
    AbstractFormResponse:
      type: "object"
      properties:
        formatType:
          $ref: "#/components/schemas/FormatType"
      required:
      - "formatType"
      discriminator:
        propertyName: "formatType"
        mapping:
          Inputs: "#/components/schemas/FormResponseInputs"
          Result: "#/components/schemas/FormResponseResult"
    AbstractValue:
      description: "The base type from which simple value types extends"
      type: "object"
      properties:
        valueType:
          $ref: "#/components/schemas/ValueType"
      required:
      - "valueType"
      discriminator:
        propertyName: "valueType"
    TextInputContentType:
      type: "string"
      enum:
      - "Name"
      - "NamePrefix"
      - "GivenName"
      - "MiddleName"
      - "FamilyName"
      - "NameSuffix"
      - "Nickname"
      - "JobTitle"
      - "OrganizationName"
      - "Location"
      - "FullStreetAddress"
      - "StreetAddressLine1"
      - "StreetAddressLine2"
      - "AddressCity"
      - "AddressState"
      - "AddressCityAndState"
      - "Sublocality"
      - "CountryName"
      - "PostalCode"
      - "TelephoneNumber"
      - "EmailAddress"
      - "URL"
      - "CreditCardNumber"
      - "Username"
      - "Password"
      - "NewPassword"
      - "OneTimeCode"
    AbstractStaticContent:
      type: "object"
      properties:
        formatType:
          $ref: "#/components/schemas/FormatType"
      required:
      - "formatType"
      discriminator:
        propertyName: "formatType"
        mapping:
          Text: "#/components/schemas/StaticContentText"
          Links: "#/components/schemas/StaticContentLinks"
          ExperienceType: "#/components/schemas/StaticContentExperienceType"
          Attachments: "#/components/schemas/StaticContentAttachments"
    AbstractForm:
      type: "object"
      properties:
        formatType:
          $ref: "#/components/schemas/FormatType"
      required:
      - "formatType"
      discriminator:
        propertyName: "formatType"
        mapping:
          Inputs: "#/components/schemas/FormInputs"
          MessageDefinition: "#/components/schemas/FormMessageDefinition"
    FormRecordsResult:
      description: "The resulting records of handling a form response"
      allOf:
      - $ref: "#/components/schemas/AbstractFormResult"
      - type: "object"
        properties:
          records:
            minItems: 1
            maxItems: 1
            type: "array"
            items:
              $ref: "#/components/schemas/RecordResult"
        required:
        - "records"
    InteractionType:
      type: "string"
      enum:
      - "EntryInteraction"
      - "AttachmentInteraction"
    InReplyToMessageId:
      type: "string"
      description: "MessageId from the previous message being replied to"
      example: "a133c185-73a7-4adf-b6d9-b7fd62babb4e"
    TitleItemType:
      type: "string"
      enum:
      - "TitleItem"
      - "TitleImageItem"
      - "TitleVideoItem"
    TextInputKeyboardType:
      type: "string"
      enum:
        - "Default"
        - "AsciiCapable"
        - "NumbersAndPunctuation"
        - "URL"
        - "NumberPad"
        - "PhonePad"
        - "NamePhonePad"
        - "EmailAddress"
        - "DecimalPad"
        - "Twitter"
        - "WebSearch"
    Message:
      description: "A message entry"
      allOf:
      - $ref: "#/components/schemas/AbstractEntry"
      - type: "object"
        properties:
          abstractMessage:
            $ref: "#/components/schemas/AbstractMessage"
        required:
        - "abstractMessage"
    TypingStoppedIndicator:
      description: "A typing stopped indicator entry"
      allOf:
      - $ref: "#/components/schemas/AbstractEntry"
      - type: "object"
        properties:
          timestamp:
            type: "integer"
            format: "int64"
        required:
        - "timestamp"
    RequiredFieldRestriction:
      description: "Required field restriction for a message field."
      allOf:
      - $ref: "#/components/schemas/AbstractFieldRestriction"
      - type: "object"
        properties:
          fieldRequired:
            type: "boolean"
            description: "The required flag for a field. Required."
        required:
        - "fieldRequired"
    LocationItem:
      description: "A location item."
      allOf:
      - $ref: "#/components/schemas/AbstractLocationItem"
    FormIntroScreenType:
      type: "string"
      enum:
      - "FormSplashScreen"
    AgentWorkStatus:
      type: "string"
      enum:
      - "Accept"
      - "Close"
      - "Decline"
      - "Cancel"
    AuthorizationContextType:
      type: "string"
      enum:
      - "ConversationChannelDefinition"
      - "EmbeddedMessagingChannel"
      - "ExternalConversationParticipant"
    ExperienceTypeValue:
      description: "An Experience Type value"
      allOf:
      - $ref: "#/components/schemas/AbstractValue"
      - type: "object"
        properties:
          type:
            $ref: "#/components/schemas/ExperienceTypeRef"
          value:
            type: "object"
            description: "An Experience Type value"
        required:
        - "type"
        - "value"
    MessageDeliveryFailed:
      description: "A message could not be delivered"
      allOf:
      - $ref: "#/components/schemas/AbstractEntry"
      - type: "object"
        properties:
          recipient:
            $ref: "#/components/schemas/Participant"
          errorMessage:
            type: "string"
          failedConversationEntryIdentifier:
            type: "string"
          errorCode:
            type: "string"
        required:
        - "recipient"
        - "errorCode"
    DeleteRouteResponse:
      type: "object"
      properties:
        success:
          type: "boolean"
          description: "Indicates the PSR for the given conversation was successfully cancelled or not."
    FlowInfo:
      type: "object"
      description: "Enter Flow details which needs to be used for routing"
      properties:
        flowId:
          type: "string"
          description: "Enter flowId for the queue"
        queueId:
          type: "string"
          description: "Fallback queueId"
    ImageReferenceValue:
      description: "An image reference value"
      allOf:
      - $ref: "#/components/schemas/AbstractValue"
      - type: "object"
        properties:
          imageReferenceId:
            $ref: "#/components/schemas/UniqueId"
        required:
        - "imageReferenceId"
    Acknowledgement:
      type: "object"
      properties:
        acknowledgementTimestamp:
          type: "string"
          description: "The timestamp associated with the acknowledgement"
        acknowledgementType:
          $ref: "#/components/schemas/AcknowledgementType"
        acknowledgedConversationEntryIdentifier:
          type: "string"
          description: "The unique identifier for the conversation entry this acknowledgement is associated with"
        acknowledgmentCreatedConversationEntryIdentifier:
          type: "string"
          description: "The client-supplied unique identifier to set when storing the new acknowledgement conversation entry"
      required:
      - "acknowledgementType"
      - "acknowledgedConversationEntryIdentifier"
      - "acknowledgmentCreatedConversationEntryIdentifier"
      - "acknowledgementTimestamp"
    ParticipantChangedClientMenuMetadata:
      type: "object"
      description: "A dialog that client displays in the menu"
      properties:
        menuOptions:
          type: "array"
          items:
            type: "object"
            properties:
              title:
                type: "string"
              optionIdentifier:
                type: "string"
          required:
          - "optionIdentifier"
          - "title"
    RoutingResultRequest:
      description: "Payload to routing result"
      type: "object"
      properties:
        conversationIdentifier:
          type: "string"
          description: "The conversation identifier associated with the work"
          maxLength: 240
        externallyRouted:
          type: "boolean"
          description: "Whether request is routed to external target (like an external agent outside of Salesforce, an agent who is in Salesforce but in a different contact center, etc)"
        errorMessage:
          type: "string"
          description: "The error message why routing is failed"
        workItemId:
          description: "Salesforce WorkItem Id"
          type: "string"
          maxLength: 15
          minLength: 15
        routingType:
          $ref: "#/components/schemas/RoutingType"
        success:
          type: "boolean"
          description: "Whether routing is successful"
      required:
      - "workItemId"
      - "conversationIdentifier"
      - "success"
      - "externallyRouted"
    FormErrorType:
      type: "string"
      enum:
      - "InvalidFormResponse"
      - "FormRequestExpired"
      - "ApiResultErrorCode"
      - "InternalServerError"
    DeliveryAcknowledgement:
      description: "Delivery acknowledgement of a conversation entry to a particular recipient"
      allOf:
      - $ref: "#/components/schemas/AbstractEntry"
      - type: "object"
        properties:
          recipient:
            $ref: "#/components/schemas/Participant"
          acknowledgedConversationEntryIdentifier:
            type: "string"
            description: "The conversation entry id of the entry referenced by the acknowledgement"
          acknowledgementTimestamp:
            type: "integer"
            format: "int64"
        required:
        - "acknowledgedConversationEntryIdentifier"
        - "acknowledgementTimestamp"
        - "recipient"
    ReadAcknowledgement:
      description: "Read acknowledgement high water mark of a conversation entry for a participant in a conversation"
      allOf:
      - $ref: "#/components/schemas/AbstractEntry"
      - type: "object"
        properties:
          recipient:
            $ref: "#/components/schemas/Participant"
          acknowledgedConversationEntryIdentifier:
            type: "string"
            description: "The conversation entry id of the entry referenced by the acknowledgement"
          acknowledgementTimestamp:
            type: "integer"
            format: "int64"
        required:
        - "acknowledgedConversationEntryIdentifier"
        - "acknowledgementTimestamp"
        - "recipient"
    SessionStatusChanged:
      description: "A session status changed"
      allOf:
      - $ref: "#/components/schemas/AbstractEntry"
      - type: "object"
        properties:
          conversationIdentifier:
            type: "string"
            description: "Conversation Identifier"
          channelAddressIdentifier:
            type: "string"
            description: "Channel Address Identifier"
          sessionStatusPrev:
            $ref: "#/components/schemas/SessionStatus"
            description: "Previous value for session status"
          sessionEndedByRole:
            $ref: "#/components/schemas/ParticipantRole"
            description: "The role of the participant that ended the session"
          sessionEndTime:
            format: "int64"
            description: "Start epoch timestamp for session end time"
            type: "integer"
            example: "1573503300"
          sessionStatus:
            $ref: "#/components/schemas/SessionStatus"
            description: "Updated session status"
          sessionStartTime:
            format: "int64"
            description: "Start epoch timestamp for session start time"
            type: "integer"
            example: "1573503300"
          sessionId:
            type: "string"
            description: "Session id"
        required:
        - "sessionId"
        - "channelAddressIdentifier"
        - "conversationIdentifier"
        - "sessionStatus"
        - "sessionStartTime"
    EndUserConsentUpdated:
      description: "An end user consent updated entry"
      allOf:
      - $ref: "#/components/schemas/AbstractEntry"
      - type: "object"
        properties:
          isEndUserInitiated:
            type: "boolean"
            description: "true if the end user initiated the consent action."
          initiatingConversationEntryIdentifier:
            type: "string"
            description: "Identifier that indicates the conversation entry that initiated the consent update."
            example: "a133c185-73a7-4adf-b6d9-b7fd62babb4e"
          endUserSubject:
            type: "string"
            description: "End user for which the consent got updated."
          endUserDisplayName:
            type: "string"
            description: "Display name of the end user which can be null."
          confirmationConversationEntryIdentifier:
            type: "string"
            description: "Identifier that indicates the conversation entry that was sent as a consent confirmation to the end user."
            example: "b233c185-73a7-4adf-b6d9-b7fd62babb4e"
          consentStatus:
            $ref: "#/components/schemas/ConsentStatus"
            description: "The end user's consent status."
        required:
        - "endUserSubject"
        - "consentStatus"
        - "isEndUserInitiated"
    RecordResult:
      type: "object"
      properties:
        recordReferenceId:
          $ref: "#/components/schemas/UniqueId"
        resultMessage:
          type: "string"
        isCreated:
          type: "boolean"
      required:
      - "recordReferenceId"
      - "isCreated"
    ParticipantChangedOperation:
      type: "string"
      description: "set of participant changed operation"
      enum:
      - "add"
      - "remove"
      - "update"
    ConsultConversationInfo:
      description: "Consult conversation in a Multiparty conversation"
      allOf:
      - $ref: "#/components/schemas/AbstractEntry"
      - type: "object"
        properties:
          conversationIdentifier:
            type: "string"
            description: "Id of the consult conversation"
          timestamp:
            type: "integer"
            format: "int64"
            description: "Timestamp of the consult conversation"
        required:
        - "conversationIdentifier"
        - "timestamp"
    FormErrorResult:
      description: "The resulting error of handling a form response"
      allOf:
      - $ref: "#/components/schemas/AbstractFormResult"
      - type: "object"
        properties:
          errors:
            type: "array"
            minItems: 1
            items:
              $ref: "#/components/schemas/FormError"
        required:
        - "errors"
    SessionStatus:
      type: "string"
      description: "Enum denoting the status of the session in the conversation."
      enum:
      - "Active"
      - "Ended"
      - "Waiting"
      - "New"
      - "Consent"
      - "Inactive"
      - "Error"
      - "Paused"
    ChoicesMessageDefinition:
      description: "Choices with option references"
      allOf:
      - $ref: "#/components/schemas/AbstractChoices"
      - type: "object"
        properties:
          options:
            type: "array"
            minItems: 1
            items:
              $ref: "#/components/schemas/OptionValue"
          messageDefinitionId:
            $ref: "#/components/schemas/RecordId"
            deprecated: true
          optionReferences:
            minItems: 0
            type: "array"
            items:
              $ref: "#/components/schemas/OptionReference"
            deprecated: true
          messageDefinitionNameOrId:
            $ref: "#/components/schemas/MessageDefinitionNameOrId"
          targetLocale:
            $ref: "#/components/schemas/Locale"
            description: "The requested local the message should be translated into"
            example: "en-US"
          parameters:
            type: "array"
            items:
              $ref: "#/components/schemas/NamedValue"
        required:
        - "messageDefinitionNameOrId"
        - "options"
    PostConversationEntryRequest:
      description: "post conversationEntry request body"
      type: "object"
      properties:
        conversationIdentifier:
          description: "unique conversation identifier of the conversation"
          type: "string"
          maxLength: 240
          example: "f47ac10b-58cc-4372-a567-0e02b2c3d479"
        sender:
          $ref: "#/components/schemas/Participant"
        conversationEntries:
          minItems: 1
          maxItems: 1
          description: "List of messages to add to the conversation"
          type: "array"
          items:
            $ref: "#/components/schemas/ConversationEntryRequest"
      required:
      - "conversationIdentifier"
      - "conversationEntries"
      - "sender"
    GetConversationEntriesRequest:
      description: "Request parameters to fetch entries in a given conversation"
      type: "object"
      properties:
        conversationIdentifier:
          type: "string"
          description: "The unique conversation identifier of the conversation"
        limit:
          format: "int32"
          description: "The max number of entries to return"
          type: "integer"
          example: 5
        startTime:
          format: "int64"
          description: "The start time to use when fetching Conversation Entries."
          type: "integer"
          example: 1688190840000
        endTime:
          format: "int64"
          description: "The end time to use when fetching Conversation Entries."
          type: "integer"
          example: 1688190840000
        direction:
          $ref: "#/components/schemas/DataDirectionEnum"
      required:
      - "conversationIdentifier"
      - "startTime"
    UserAgentWork:
      title: "User Agent Work"
      allOf:
      - $ref: "#/components/schemas/PatchAgentWorkRequest"
      - type: "object"
    CustomBotIntegration:
      description: "Custom bot integration"
      allOf:
      - $ref: "#/components/schemas/AbstractCustomIntegration"
      - type: "object"
        properties:
          extConvParticipantIntegDefDevName:
            type: "string"
            description: "Developer name of external conversation participant integration definition"
            maxLength: 240
          integrationNamespace:
            type: "string"
            description: "Integration Namespace represents developer namespace if that exists, or orgId if it does not"
            maxLength: 240
        required:
        - "extConvParticipantIntegDefDevName"
        - "integrationNamespace"
    ParticipantChanged:
      description: "A participant changed entry"
      allOf:
      - $ref: "#/components/schemas/AbstractEntry"
      - type: "object"
        properties:
          entries:
            type: "array"
            items:
              type: "object"
              properties:
                operation:
                  $ref: "#/components/schemas/ParticipantChangedOperation"
                menuMetadata:
                  $ref: "#/components/schemas/ParticipantChangedClientMenuMetadata"
                participant:
                  $ref: "#/components/schemas/Participant"
                displayName:
                  type: "string"
        required:
        - "participant"
    PatchAgentWorkRequest:
      description: "Update the agent work for given external bot or agent"
      type: "object"
      properties:
        workId:
          type: "string"
          description: "Agent work associated with an external bot or user"
          example: "0BzSB000002jTO5"
        contextType:
          $ref: "#/components/schemas/AgentWorkContextType"
        status:
          $ref: "#/components/schemas/AgentWorkStatus"
      required:
      - "workId"
      - "contextType"
      - "status"
      discriminator:
        propertyName: "contextType"
        mapping:
          Agent: "#/components/schemas/UserAgentWork"
          Chatbot: "#/components/schemas/BotAgentWork"
    ConsentStatus:
      type: "string"
      description: "Enum denoting the consent status of the end user."
      enum:
      - "OptIn"
      - "OptOut"
    CustomHandlingType:
      type: "string"
      description: "Specifies the type of custom handling required for this message"
      enum:
      - "None"
      - "Survey"
    AgentRoutingConfigDetails:
      description: "Agent routing based configuration details."
      allOf:
      - $ref: "#/components/schemas/RoutingConfigurationDetails"
      - type: "object"
        properties:
          agentId:
            type: "string"
    PatchAgentWorkResponse:
      description: "Response after performing actions on a work item"
      type: "object"
      properties:
        errorDetail:
          $ref: "#/components/schemas/Error"
        success:
          type: "boolean"
          description: "Indicates whether the requested action was successfully performed"
      required:
      - "success"
    RoutingConfigurationDetails:
      description: "Definition of Routing Configuration Details including routing configuration type and other routing details associated with the routing configuration type."
      type: "object"
      properties:
        routingConfigurationType:
          $ref: "#/components/schemas/RoutingConfigurationType"
      discriminator:
        propertyName: "routingConfigurationType"
        mapping:
          QueueRoutingType: "#/components/schemas/QueueRoutingConfigDetails"
          AgentRoutingType: "#/components/schemas/AgentRoutingConfigDetails"
    Locale:
      type: "string"
      description: "A locale as defined by IETF BCP 47"
      example: "en-US"
    EstimatedWaitTime:
      type: "object"
      description: "Estimated Wait Time value and whether the Estimated Wait Time is requested or not."
      properties:
        estimatedWaitTimeInSeconds:
          type: "integer"
          format: "int32"
        isEWTRequested:
          type: "boolean"
    BotAgentWork:
      title: "Bot Agent Work"
      allOf:
      - $ref: "#/components/schemas/PatchAgentWorkRequest"
      - type: "object"
        properties:
          workItemId:
            type: "string"
            description: "WorkItem Id in Salesforce"
          botId:
            type: "string"
            description: "A unique identifier for the external bot handling the work or task."
        required:
        - "workItemId"
        - "botId"
    FormResponseResult:
      description: "The result of handling a form response"
      allOf:
      - $ref: "#/components/schemas/AbstractFormResponse"
      - type: "object"
        properties:
          result:
            $ref: "#/components/schemas/AbstractFormResult"
        required:
        - "result"
    FormMessageDefinition:
      description: "Reference to a form message definition"
      allOf:
      - $ref: "#/components/schemas/AbstractForm"
      - type: "object"
        properties:
          parameters:
            type: "array"
            items:
              $ref: "#/components/schemas/NamedValue"
          messageDefinitionNameOrId:
            $ref: "#/components/schemas/MessageDefinitionNameOrId"
          targetLocale:
            $ref: "#/components/schemas/Locale"
            description: "The requested local the message should be translated into"
            example: "en-US"
        required:
        - "messageDefinitionNameOrId"
    OptionReference:
      description: "Deprecated. Replaced by OptionValue and ReferenceValue."
      additionalProperties: false
      type: "object"
      properties:
        optionId:
          $ref: "#/components/schemas/UniqueId"
        referenceId:
          $ref: "#/components/schemas/UniqueId"
      required:
      - "optionId"
      - "referenceId"
      deprecated: true
    FlagLower:
      description: "A flag Lower entry"
      allOf:
      - $ref: "#/components/schemas/AbstractEntry"
    RoutingConfigurationType:
      type: "string"
      description: "Enum for Routing Configuration Type"
      enum:
      - "QueueRoutingType"
      - "AgentRoutingType"
    StringFieldRestriction:
      description: "String restriction for a message field."
      allOf:
      - $ref: "#/components/schemas/AbstractFieldRestriction"
      - type: "object"
        properties:
          encoding:
            description: "The char encoding to use when evaluating the string. Required."
            $ref: "#/components/schemas/CapabilityEncoding"
          maxLength:
            type: "integer"
            format: "int64"
            description: "The char length max for the field. Required."
        required:
        - "encoding"
        - "maxLength"
    InputId:
      type: "string"
      description: "An id that uniquely identifies an input in a form message"
    EntryInteraction:
      title: "Interaction Details"
      allOf:
      - $ref: "#/components/schemas/AbstractInteraction"
      - type: "object"
        properties:
          payload:
            $ref: "#/components/schemas/AbstractEntry"
      required:
      - "payload"
    MessageTypeCapabilities:
      description: "Message Type capabilities."
      type: "object"
      properties:
        messageType:
          description: "The list of supported message types. Required."
          $ref: "#/components/schemas/MessageType"
        formatTypeCapabilities:
          minItems: 1
          description: "The list of Format Types supported for this message type. Required."
          type: "array"
          items:
            $ref: "#/components/schemas/FormatTypeCapabilities"
      required:
      - "messageType"
      - "formatTypeCapabilities"
    AbstractTitleItem:
      type: "object"
      properties:
        secondarySubTitle:
          type: "string"
        itemType:
          $ref: "#/components/schemas/TitleItemType"
        title:
          type: "string"
        subTitle:
          type: "string"
        tertiarySubTitle:
          type: "string"
        referenceId:
          $ref: "#/components/schemas/UniqueId"
      required:
      - "itemType"
      - "title"
      discriminator:
        propertyName: "itemType"
    AbstractInput:
      description: "Common attributes for all input types"
      type: "object"
      properties:
        inputType:
          $ref: "#/components/schemas/InputType"
        id:
          $ref: "#/components/schemas/InputId"
        label:
          $ref: "#/components/schemas/AbstractTitleItem"
        hintText:
          type: "string"
        required:
          type: "boolean"
      required:
      - "inputType"
      - "id"
      discriminator:
        propertyName: "inputType"
    AbstractFormIntroScreen:
      description: "Common base for all form intoduction screen types"
      type: "object"
      properties:
        screenType:
          $ref: "#/components/schemas/FormIntroScreenType"
      required:
      - "screenType"
      discriminator:
        propertyName: "screenType"
    ValueType:
      type: "string"
      description: "The type of a value"
      enum:
      - "TextValue"
      - "BooleanValue"
      - "IntegerValue"
      - "DoubleValue"
      - "UrlValue"
      - "DateValue"
      - "DateTimeValue"
      - "ReferenceValue"
      - "ImageReferenceValue"
      - "ListValue"
      - "CompositeValue"
      - "LocationValue"
      - "AssetReferenceValue"
      - "ExperienceTypeValue"
    AbstractFieldRestriction:
      description: "Abstract FieldRestriction Object."
      type: "object"
      properties:
        fieldRestrictionType:
          $ref: "#/components/schemas/FieldRestrictionType"
      required:
      - "fieldRestrictionType"
      discriminator:
        propertyName: "fieldRestrictionType"
    IntegerValue:
      description: "An integer value"
      allOf:
      - $ref: "#/components/schemas/AbstractValue"
      - type: "object"
        properties:
          integerValue:
            type: "integer"
        required:
        - "integerValue"
    TextInputType:
      type: "string"
      enum:
      - "Singleline"
      - "Multiline"
    Error:
      type: "object"
      properties:
        message:
          type: "string"
        code:
          type: "int"
      required:
      - "code"
      - "message"
    VideoAsset:
      description: "A video asset of a message."
      allOf:
      - $ref: "#/components/schemas/AbstractAsset"
    CompletedAttachmentUploadResult:
      description: "Attachment upload that was completed successfully"
      allOf:
      - $ref: "#/components/schemas/AbstractAttachmentUploadResult"
    AbstractAttachmentUploadResult:
      description: "The result of an attachment upload."
      type: "object"
      properties:
        resultType:
          $ref: "#/components/schemas/AttachmentUploadResultType"
      required:
      - "resultType"
      discriminator:
        propertyName: "resultType"
        mapping:
          CompletedAttachmentUploadResult: "#/components/schemas/CompletedAttachmentUploadResult"
          ErrorAttachmentUploadResult: "#/components/schemas/ErrorAttachmentUploadResult"
          PendingAttachmentUploadResult: "#/components/schemas/PendingAttachmentUploadResult"
    ConsentRequest:
      description: "Payload to update the consent status"
      type: "object"
      properties:
        channelAddressIdentifier:
          type: "string"
          description: "Unique channel definition Identifier of the conversation channel"
          maxLength: 240
        endUserClientId:
          type: "string"
          description: "The Messaging Platform Key of the Messaging End User"
          maxLength: 240
        consentStatus:
          $ref: "#/components/schemas/ConsentEnum"
      required:
      - "endUserClientId"
      - "channelAddressIdentifier"
      - "consentStatus"
    ConversationEntryRequest:
      description: "a single message in a conversation"
      type: "object"
      properties:
        clientTimestamp:
          format: "int64"
          description: "time at which the message was sent in the conversation"
          type: "integer"
          example: 1688190840000
        entryPayload:
          $ref: "#/components/schemas/AbstractEntry"
      required:
      - "clientTimestamp"
      - "entryPayload"
    ChoicesResponseSelections:
      description: "The selections to a choices message"
      allOf:
      - $ref: "#/components/schemas/AbstractChoicesResponse"
      - type: "object"
        properties:
          selectedOptions:
            type: "array"
            minItems: 1
            items:
              $ref: "#/components/schemas/SelectedOption"
        required:
        - "selectedOptions"
    FormatType:
      description: "The rendering format of a message. How it looks."
      type: "string"
      enum:
      - "Attachments"
      - "RichLink"
      - "Media"
      - "Buttons"
      - "Carousel"
      - "QuickReplies"
      - "ListPicker"
      - "Selections"
      - "Links"
      - "TimePicker"
      - "Application"
      - "Result"
      - "Inputs"
      - "WebView"
      - "Text"
      - "ExperienceType"
      - "Flow"
      - "MessageDefinition"
      example: "Attachments"
    AssetType:
      type: "string"
      description: "The type of an asset"
      enum:
      - "ImageAsset"
      - "VideoAsset"
      - "DocumentAsset"
    AgentWorkContextType:
      type: "string"
      enum:
      - "Agent"
      - "Chatbot"
    ConversationEntryHistory:
      description: "single entry in a conversation"
      type: "object"
      properties:
        clientTimestamp:
          format: "int64"
          description: "time at which the message was sent in the conversation"
          type: "integer"
          example: 1688190840000
        sender:
          $ref: "#/components/schemas/Participant"
        entryPayload:
          $ref: "#/components/schemas/AbstractEntry"
      required:
      - "clientTimestamp"
      - "sender"
      - "entryPayload"
    AgentActionEnum:
      type: "string"
      description: "Agent action enum, in 254 we only support 'Transfer'"
      enum:
      - "Transfer"
      - "Conference"
    AbstractTitleInteractionItem:
      type: "object"
      properties:
        titleItem:
          $ref: "#/components/schemas/AbstractTitleItem"
        itemType:
          $ref: "#/components/schemas/TitleInteractionItemType"
      required:
      - "itemType"
      - "titleItem"
      discriminator:
        propertyName: "itemType"
    Capabilities:
      description: "A set of capabilities for a channel."
      type: "object"
      properties:
        channelCapabilities:
          minItems: 1
          description: "A list of the capabilities and restrictions for the request's app's channels. Required."
          type: "array"
          items:
            $ref: "#/components/schemas/ChannelCapabilities"
        appType:
          description: "The app for which the capabilities are being registered. Required."
          $ref: "#/components/schemas/AppType"
      required:
      - "appType"
      - "channelCapabilities"
    CapabilityEncoding:
      type: "string"
      description: "The char encoding to use when evaluating the string."
      enum:
      - "UTF8"
      - "GSM"
      - "UCS2"
    PostConversationResponse:
      type: "object"
      description: "PostConversation response including conversation identifier"
      properties:
        conversationIdentifier:
          type: "string"
        success:
          type: "boolean"
    AbstractTimeSlotItem:
      description: "The base type of a time slot"
      type: "object"
      properties:
        duration:
          type: "integer"
          description: "The duration of the time slot in seconds."
          example: 3600
        itemType:
          $ref: "#/components/schemas/TimeSlotItemType"
        startTime:
          type: "string"
          format: "date-time"
          example: "2021-02-25T14:00:00Z"
        referenceId:
          $ref: "#/components/schemas/UniqueId"
      required:
      - "itemType"
      - "startTime"
      - "duration"
      discriminator:
        propertyName: "itemType"
    AcknowledgementType:
      type: "string"
      description: "Acknowledgement Type"
      enum:
      - "Read"
      - "Delivered"
    MessageId:
      type: "string"
      description: "UUID that references a message"
      example: "57904eb6-5352-4c5e-adf6-5f100572cf5d"
    TitleLinkItem:
      allOf:
        - $ref: "#/components/schemas/AbstractTitleInteractionItem"
        - type: "object"
          properties:
            url:
              $ref: "#/components/schemas/Url"
          required:
            - "url"
servers:
- url: "/api/v1/"
openapi: "3.0.0"
paths:
  /route:
    post:
      summary: "Route API to get routing instructions from Salesforce"
      operationId: "post-route"
      responses:
        202:
          description: "Accepted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostRouteResponse"
        default:
          description: "Unsuccessful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: "Create PSR for given conversation."
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostRouteRequest"
      parameters:
      - name: "Authorization"
        schema:
          type: "string"
        description: "The access token generated to make requests to the Interaction Service APIs"
        in: "header"
        required: true
        example: "Bearer XXXXXX"
      - name: "OrgId"
        schema:
          type: "string"
        description: "Organization Id used to verify the request against the auth token"
        in: "header"
        required: true
        example: "00Dxxxxxxxxxxxx"
      - name: "AuthorizationContext"
        schema:
          type: "string"
        description: "Specify the extra info for request authorization"
        in: "header"
        required: true
      - name: "AuthorizationContextType"
        schema:
          $ref: "#/components/schemas/AuthorizationContextType"
        description: "type of the context for request"
        in: "header"
      - name: "RequestId"
        schema:
          type: "string"
        description: "UUID that references this request"
        in: "header"
        required: true
        example: "f7904eb6-5352-4c5e-adf6-5f100572cf5d"
    delete:
      summary: "Delete PSR for given conversation"
      operationId: "delete-route"
      responses:
        202:
          description: "Accepted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteRouteResponse"
        default:
          description: "Unsuccessful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: "Delete PSR for given conversation."
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteRouteRequest"
      parameters:
      - name: "Authorization"
        schema:
          type: "string"
        description: "The access token generated to make requests to the Interaction Service APIs"
        in: "header"
        required: true
        example: "Bearer XXXXXX"
      - name: "OrgId"
        schema:
          type: "string"
        description: "Organization Id used to verify the request against the auth token"
        in: "header"
        required: true
        example: "00Dxxxxxxxxxxxx"
      - name: "AuthorizationContext"
        schema:
          type: "string"
        description: "Specify the extra info for request authorization"
        in: "header"
        required: true
      - name: "RequestId"
        schema:
          type: "string"
        description: "UUID that references this request"
        in: "header"
        required: true
        example: "f7904eb6-5352-4c5e-adf6-5f100572cf5d"
  /consent:
    patch:
      summary: "Update consent status"
      operationId: "patch-consent-update"
      responses:
        default:
          description: "Unsuccessful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConsentResponse"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConsentResponse"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConsentRequest"
      parameters:
      - name: "Authorization"
        schema:
          type: "string"
        description: "The access token generated to make requests to the Interaction Service APIs"
        in: "header"
        required: true
        example: "Bearer XXXXXX"
      - name: "OrgId"
        schema:
          type: "string"
        description: "Organization Id used to verify the request against the auth token"
        in: "header"
        required: true
        example: "00Dxxxxxxxxxxxx"
      - name: "AuthorizationContext"
        schema:
          type: "string"
        description: "Specify the extra info for request authorization"
        in: "header"
        required: true
      - name: "RequestId"
        schema:
          type: "string"
        description: "UUID that references this request"
        in: "header"
        required: true
        example: "f7904eb6-5352-4c5e-adf6-5f100572cf5d"
  /capabilities:
    patch:
      summary: "Register Capabilities for Structured content"
      operationId: "patch-capabilities"
      responses:
        default:
          description: "Unsuccessful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterCapabilitiesResponse"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterCapabilitiesResponse"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CapabilitiesRequest"
      parameters:
      - name: "Authorization"
        schema:
          type: "string"
        description: "The access token generated to make requests to the Interaction Service APIs"
        in: "header"
        required: true
        example: "Bearer XXXXXX"
      - name: "OrgId"
        schema:
          type: "string"
        description: "Organization Id used to verify the request against the auth token"
        in: "header"
        required: true
        example: "00Dxxxxxxxxxxxx"
      - name: "AuthorizationContext"
        schema:
          type: "string"
        description: "Specify the extra info for request authorization"
        in: "header"
        required: true
      - name: "AuthorizationContextType"
        schema:
          $ref: "#/components/schemas/AuthorizationContextType"
        description: "type of the context for request"
        in: "header"
      - name: "RequestId"
        schema:
          type: "string"
        description: "UUID that references this request"
        in: "header"
        required: true
        example: "f7904eb6-5352-4c5e-adf6-5f100572cf5d"
  /conversationHistory:
    post:
      summary: "Add conversation history to the conversation platform"
      operationId: "add-conversation-history"
      responses:
        202:
          description: "Accepted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddConversationHistoryResponse"
        default:
          description: "Unsuccessful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddConversationHistoryRequest"
      parameters:
      - name: "Authorization"
        schema:
          type: "string"
        description: "The access token generated to make requests to the Interaction Service APIs"
        in: "header"
        required: true
        example: "Bearer XXXXXX"
      - name: "OrgId"
        schema:
          type: "string"
        description: "Organization Id used to verify the request against the auth token"
        in: "header"
        required: true
        example: "00Dxxxxxxxxxxxx"
      - name: "AuthorizationContext"
        schema:
          type: "string"
        description: "Specify the extra info for request authorization"
        in: "header"
        required: true
      - name: "AuthorizationContextType"
        schema:
          $ref: "#/components/schemas/AuthorizationContextType"
        description: "type of the context for request"
        in: "header"
        required: true
      - name: "RequestId"
        schema:
          type: "string"
        description: "UUID that references this request"
        in: "header"
        required: true
        example: "f7904eb6-5352-4c5e-adf6-5f100572cf5d"
  /acknowledgement:
    post:
      summary: "Marks messages as read / delivered"
      operationId: "post-acknowledgement"
      responses:
        default:
          description: "Unsuccessful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AcknowledgementResponse"
        200:
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AcknowledgementResponse"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AcknowledgementRequest"
      parameters:
      - name: "Authorization"
        schema:
          type: "string"
        description: "The access token generated to make requests to the Interaction Service APIs"
        in: "header"
        required: true
        example: "Bearer XXXXXX"
      - name: "OrgId"
        schema:
          type: "string"
        description: "Organization Id used to verify the request against the auth token"
        in: "header"
        required: true
        example: "00Dxxxxxxxxxxxx"
      - name: "AuthorizationContext"
        schema:
          type: "string"
        description: "Specify the extra info for request authorization"
        in: "header"
        required: true
      - name: "RequestId"
        schema:
          type: "string"
        description: "UUID that references this request"
        in: "header"
        required: true
        example: "f7904eb6-5352-4c5e-adf6-5f100572cf5d"
  /participant:
    post:
      summary: Operations performed on Participant for a given conversation
      operationId: post-participant
      responses:
        default:
          description: Unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '200':
          description: Operation succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostParticipantResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostParticipantRequest'
      parameters:
        - in: header
          name: Authorization
          description: "The access token generated to make requests to the Interaction Service APIs"
          example: Bearer XXXXXX
          required: true
          schema:
            type: string
        - name: OrgId
          in: header
          description: "Organization Id used to verify the request against the auth token"
          example: 00Dxxxxxxxxxxxx
          required: true
          schema:
            type: string
        - name: AuthorizationContext
          in: header
          description: "Specify the extra info for request authorization"
          example: Partner_ChannelDefinition
          required: true
          schema:
            type: string
        - name: RequestId
          in: header
          description: "UUID that references this request"
          required: true
          schema:
            type: string
          example: f7904eb6-5352-4c5e-adf6-5f100572cf5d
  /interactions:
    post:
      summary: "Create interactions"
      operationId: "post-interaction"
      responses:
        202:
          description: "Accepted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostInteractionResponse"
        default:
          description: "Unsuccessful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: "Create a interactions associated to a Conversation."
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/InteractionRequest"
      parameters:
      - name: "Authorization"
        schema:
          type: "string"
        description: "The access token generated to make requests to the Interaction Service APIs"
        in: "header"
        required: true
        example: "Bearer XXXXXX"
      - name: "OrgId"
        schema:
          type: "string"
        description: "Organization Id used to verify the request against the auth token"
        in: "header"
        required: true
        example: "00Dxxxxxxxxxxxx"
      - name: "AuthorizationContext"
        schema:
          type: "string"
        description: "Specify the extra info for request authorization"
        in: "header"
        required: true
        example: "Partner_ChannelDefinition"
      - name: "RequestId"
        schema:
          type: "string"
        description: "UUID that references this request"
        in: "header"
        required: true
        example: "f7904eb6-5352-4c5e-adf6-5f100572cf5d"
  /agentWork:
    post:
      summary: "Create agent work"
      operationId: "post-agent-work"
      responses:
        202:
          description: "Accepted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgentWorkResponse"
        default:
          description: "Unsuccessful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: "Create an agent work."
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AgentWorkRequest"
      parameters:
      - name: "Authorization"
        schema:
          type: "string"
        description: "The access token generated to make requests to the Interaction Service APIs"
        in: "header"
        required: true
        example: "Bearer XXXXXX"
      - name: "OrgId"
        schema:
          type: "string"
        description: "Organization Id used to verify the request against the auth token"
        in: "header"
        required: true
        example: "00Dxxxxxxxxxxxx"
      - name: "AuthorizationContext"
        schema:
          type: "string"
        description: "Specify the extra info for request authorization"
        in: "header"
        required: true
      - name: "RequestId"
        schema:
          type: "string"
        description: "UUID that references this request"
        in: "header"
        required: true
        example: "f7904eb6-5352-4c5e-adf6-5f100572cf5d"
    patch:
      summary: "Manage state and perform actions related to work items."
      operationId: "patch-agent-work"
      responses:
        202:
          description: "Accepted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PatchAgentWorkResponse"
        default:
          description: "Unsuccessful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: "Enables partners to manage state and perform actions related to work items."
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchAgentWorkRequest"
      parameters:
      - name: "Authorization"
        schema:
          type: "string"
        description: "The access token generated to make requests to the Interaction Service APIs"
        in: "header"
        required: true
        example: "Bearer XXXXXX"
      - name: "OrgId"
        schema:
          type: "string"
        description: "Organization Id used to verify the request against the auth token"
        in: "header"
        required: true
        example: "00Dxxxxxxxxxxxx"
      - name: "AuthorizationContext"
        schema:
          type: "string"
        description: "Specify the extra info for request authorization"
        in: "header"
        required: true
      - name: "AuthorizationContextType"
        schema:
          $ref: "#/components/schemas/AuthorizationContextType"
        description: "Authorization request context type"
        in: "header"
        required: true
      - name: "RequestId"
        schema:
          type: "string"
        description: "UUID that references this request"
        in: "header"
        required: true
        example: "f7904eb6-5352-4c5e-adf6-5f100572cf5d"
  /conversation:
    post:
      summary: "Establish a conversation based on conversationAddressIdentifier and participants"
      operationId: "post-conversation"
      responses:
        202:
          description: "Accepted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostConversationResponse"
        default:
          description: "Unsuccessful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: "Establish a conversation."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostConversationRequest"
      parameters:
      - name: "Authorization"
        schema:
          type: "string"
        description: "The access token generated to make requests to the Interaction Service APIs"
        in: "header"
        required: true
        example: "Bearer XXXXXX"
      - name: "OrgId"
        schema:
          type: "string"
        description: "Organization Id used to verify the request against the auth token"
        in: "header"
        required: true
        example: "00Dxxxxxxxxxxxx"
      - name: "AuthorizationContext"
        schema:
          type: "string"
        description: "Specify the extra info for request authorization"
        in: "header"
        required: true
        example: "Partner_ChannelDefinition"
      - name: "RequestId"
        schema:
          type: "string"
        description: "UUID that references this request"
        in: "header"
        required: true
        example: "f7904eb6-5352-4c5e-adf6-5f100572cf5d"
  /conversationEntry:
    post:
      summary: "Add conversation entries to a conversation"
      operationId: "post-conversation-entry"
      responses:
        202:
          description: "Accepted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostConversationEntryResponse"
        default:
          description: "Unsuccessful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: "add conversation entries to the given conversation"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostConversationEntryRequest"
      parameters:
      - name: "Authorization"
        schema:
          type: "string"
        description: "The access token generated to make requests to the Interaction Service APIs"
        in: "header"
        required: true
        example: "Bearer XXXXXX"
      - name: "OrgId"
        schema:
          type: "string"
        description: "Organization Id used to verify the request against the auth token"
        in: "header"
        required: true
        example: "00Dxxxxxxxxxxxx"
      - name: "AuthorizationContext"
        schema:
          type: "string"
        description: "Specify the extra info for request authorization"
        in: "header"
        required: true
      - name: "AuthorizationContextType"
        schema:
          $ref: "#/components/schemas/AuthorizationContextType"
        description: "request context"
        in: "header"
        required: true
      - name: "RequestId"
        schema:
          type: "string"
        description: "UUID that references this request"
        in: "header"
        required: true
        example: "f7904eb6-5352-4c5e-adf6-5f100572cf5d"
    get:
      summary: "Get the conversation entries for the given conversation identifier"
      operationId: "get-conversation-entries"
      responses:
        default:
          description: "Unsuccessful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        200:
          description: "Operation succeeded"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetConversationEntriesResponse"
      description: "Provides an end point get conversation entries in a conversation."
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetConversationEntriesRequest"
      parameters:
      - name: "Authorization"
        schema:
          type: "string"
        description: "The access token generated to make requests to the Interaction Service APIs"
        in: "header"
        required: true
        example: "Bearer XXXXXX"
      - name: "OrgId"
        schema:
          type: "string"
        description: "Organization Id used to verify the request against the auth token"
        in: "header"
        required: true
        example: "00Dxxxxxxxxxxxx"
      - name: "AuthorizationContext"
        schema:
          type: "string"
        description: "Specify the extra info for request authorization"
        in: "header"
        required: true
      - name: "AuthorizationContextType"
        schema:
          $ref: "#/components/schemas/AuthorizationContextType"
        description: "request context"
        in: "header"
        required: true
      - name: "RequestId"
        schema:
          type: "string"
        description: "UUID that references this request"
        in: "header"
        required: true
        example: "f7904eb6-5352-4c5e-adf6-5f100572cf5d"
  /routingResult:
    post:
      summary: "Notify routing result"
      operationId: "post-routing-result"
      responses:
        202:
          description: "Accepted"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoutingResultResponse"
        default:
          description: "Unsuccessful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      description: "Create an agent work."
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoutingResultRequest"
      parameters:
      - name: "Authorization"
        schema:
          type: "string"
        description: "The access token generated to make requests to the Interaction Service APIs"
        in: "header"
        required: true
        example: "Bearer XXXXXX"
      - name: "OrgId"
        schema:
          type: "string"
        description: "Organization Id used to verify the request against the auth token"
        in: "header"
        required: true
        example: "00Dxxxxxxxxxxxx"
      - name: "AuthorizationContext"
        schema:
          type: "string"
        description: "Specify the extra info for request authorization"
        in: "header"
        required: true
      - name: "RequestId"
        schema:
          type: "string"
        description: "UUID that references this request"
        in: "header"
        required: true
        example: "f7904eb6-5352-4c5e-adf6-5f100572cf5d"
info:
  title: "Interaction"
  version: "0.0.1"
  description: "APIs for interaction service"
